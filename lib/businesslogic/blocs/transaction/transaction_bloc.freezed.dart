// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target

part of 'transaction_bloc.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#custom-getters-and-methods');

/// @nodoc
mixin _$TransactionEvent {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $TransactionEventCopyWith<$Res> {
  factory $TransactionEventCopyWith(
          TransactionEvent value, $Res Function(TransactionEvent) then) =
      _$TransactionEventCopyWithImpl<$Res, TransactionEvent>;
}

/// @nodoc
class _$TransactionEventCopyWithImpl<$Res, $Val extends TransactionEvent>
    implements $TransactionEventCopyWith<$Res> {
  _$TransactionEventCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;
}

/// @nodoc
abstract class _$$_FetchTransactionListEventCopyWith<$Res> {
  factory _$$_FetchTransactionListEventCopyWith(
          _$_FetchTransactionListEvent value,
          $Res Function(_$_FetchTransactionListEvent) then) =
      __$$_FetchTransactionListEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchTransactionListEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_FetchTransactionListEvent>
    implements _$$_FetchTransactionListEventCopyWith<$Res> {
  __$$_FetchTransactionListEventCopyWithImpl(
      _$_FetchTransactionListEvent _value,
      $Res Function(_$_FetchTransactionListEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchTransactionListEvent implements _FetchTransactionListEvent {
  const _$_FetchTransactionListEvent();

  @override
  String toString() {
    return 'TransactionEvent.fetchtransactionlist()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchTransactionListEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchtransactionlist();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchtransactionlist?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchtransactionlist != null) {
      return fetchtransactionlist();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchtransactionlist(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchtransactionlist?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchtransactionlist != null) {
      return fetchtransactionlist(this);
    }
    return orElse();
  }
}

abstract class _FetchTransactionListEvent implements TransactionEvent {
  const factory _FetchTransactionListEvent() = _$_FetchTransactionListEvent;
}

/// @nodoc
abstract class _$$_FetchTransactionByIdEventCopyWith<$Res> {
  factory _$$_FetchTransactionByIdEventCopyWith(
          _$_FetchTransactionByIdEvent value,
          $Res Function(_$_FetchTransactionByIdEvent) then) =
      __$$_FetchTransactionByIdEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchTransactionByIdEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_FetchTransactionByIdEvent>
    implements _$$_FetchTransactionByIdEventCopyWith<$Res> {
  __$$_FetchTransactionByIdEventCopyWithImpl(
      _$_FetchTransactionByIdEvent _value,
      $Res Function(_$_FetchTransactionByIdEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchTransactionByIdEvent implements _FetchTransactionByIdEvent {
  const _$_FetchTransactionByIdEvent();

  @override
  String toString() {
    return 'TransactionEvent.fetchtransactionbyid()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchTransactionByIdEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchtransactionbyid();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchtransactionbyid?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchtransactionbyid != null) {
      return fetchtransactionbyid();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchtransactionbyid(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchtransactionbyid?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchtransactionbyid != null) {
      return fetchtransactionbyid(this);
    }
    return orElse();
  }
}

abstract class _FetchTransactionByIdEvent implements TransactionEvent {
  const factory _FetchTransactionByIdEvent() = _$_FetchTransactionByIdEvent;
}

/// @nodoc
abstract class _$$_AddTransactionEventCopyWith<$Res> {
  factory _$$_AddTransactionEventCopyWith(_$_AddTransactionEvent value,
          $Res Function(_$_AddTransactionEvent) then) =
      __$$_AddTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AddTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_AddTransactionEvent>
    implements _$$_AddTransactionEventCopyWith<$Res> {
  __$$_AddTransactionEventCopyWithImpl(_$_AddTransactionEvent _value,
      $Res Function(_$_AddTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AddTransactionEvent implements _AddTransactionEvent {
  const _$_AddTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.addtransaction()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_AddTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return addtransaction();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return addtransaction?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (addtransaction != null) {
      return addtransaction();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return addtransaction(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return addtransaction?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (addtransaction != null) {
      return addtransaction(this);
    }
    return orElse();
  }
}

abstract class _AddTransactionEvent implements TransactionEvent {
  const factory _AddTransactionEvent() = _$_AddTransactionEvent;
}

/// @nodoc
abstract class _$$_UpdateTransactionEventCopyWith<$Res> {
  factory _$$_UpdateTransactionEventCopyWith(_$_UpdateTransactionEvent value,
          $Res Function(_$_UpdateTransactionEvent) then) =
      __$$_UpdateTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_UpdateTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_UpdateTransactionEvent>
    implements _$$_UpdateTransactionEventCopyWith<$Res> {
  __$$_UpdateTransactionEventCopyWithImpl(_$_UpdateTransactionEvent _value,
      $Res Function(_$_UpdateTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_UpdateTransactionEvent implements _UpdateTransactionEvent {
  const _$_UpdateTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.updatetransaction()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return updatetransaction();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return updatetransaction?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (updatetransaction != null) {
      return updatetransaction();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return updatetransaction(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return updatetransaction?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (updatetransaction != null) {
      return updatetransaction(this);
    }
    return orElse();
  }
}

abstract class _UpdateTransactionEvent implements TransactionEvent {
  const factory _UpdateTransactionEvent() = _$_UpdateTransactionEvent;
}

/// @nodoc
abstract class _$$_CoinWithdrawnTransactionEventCopyWith<$Res> {
  factory _$$_CoinWithdrawnTransactionEventCopyWith(
          _$_CoinWithdrawnTransactionEvent value,
          $Res Function(_$_CoinWithdrawnTransactionEvent) then) =
      __$$_CoinWithdrawnTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_CoinWithdrawnTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_CoinWithdrawnTransactionEvent>
    implements _$$_CoinWithdrawnTransactionEventCopyWith<$Res> {
  __$$_CoinWithdrawnTransactionEventCopyWithImpl(
      _$_CoinWithdrawnTransactionEvent _value,
      $Res Function(_$_CoinWithdrawnTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_CoinWithdrawnTransactionEvent
    implements _CoinWithdrawnTransactionEvent {
  const _$_CoinWithdrawnTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.coinassetWithdrawn()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_CoinWithdrawnTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return coinassetWithdrawn();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return coinassetWithdrawn?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (coinassetWithdrawn != null) {
      return coinassetWithdrawn();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return coinassetWithdrawn(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return coinassetWithdrawn?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (coinassetWithdrawn != null) {
      return coinassetWithdrawn(this);
    }
    return orElse();
  }
}

abstract class _CoinWithdrawnTransactionEvent implements TransactionEvent {
  const factory _CoinWithdrawnTransactionEvent() =
      _$_CoinWithdrawnTransactionEvent;
}

/// @nodoc
abstract class _$$_CoinDepositTransactionEventCopyWith<$Res> {
  factory _$$_CoinDepositTransactionEventCopyWith(
          _$_CoinDepositTransactionEvent value,
          $Res Function(_$_CoinDepositTransactionEvent) then) =
      __$$_CoinDepositTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_CoinDepositTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_CoinDepositTransactionEvent>
    implements _$$_CoinDepositTransactionEventCopyWith<$Res> {
  __$$_CoinDepositTransactionEventCopyWithImpl(
      _$_CoinDepositTransactionEvent _value,
      $Res Function(_$_CoinDepositTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_CoinDepositTransactionEvent implements _CoinDepositTransactionEvent {
  const _$_CoinDepositTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.coinassetDeposit()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_CoinDepositTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return coinassetDeposit();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return coinassetDeposit?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (coinassetDeposit != null) {
      return coinassetDeposit();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return coinassetDeposit(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return coinassetDeposit?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (coinassetDeposit != null) {
      return coinassetDeposit(this);
    }
    return orElse();
  }
}

abstract class _CoinDepositTransactionEvent implements TransactionEvent {
  const factory _CoinDepositTransactionEvent() = _$_CoinDepositTransactionEvent;
}

/// @nodoc
abstract class _$$_DeleteTransactionEventCopyWith<$Res> {
  factory _$$_DeleteTransactionEventCopyWith(_$_DeleteTransactionEvent value,
          $Res Function(_$_DeleteTransactionEvent) then) =
      __$$_DeleteTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_DeleteTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_DeleteTransactionEvent>
    implements _$$_DeleteTransactionEventCopyWith<$Res> {
  __$$_DeleteTransactionEventCopyWithImpl(_$_DeleteTransactionEvent _value,
      $Res Function(_$_DeleteTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_DeleteTransactionEvent implements _DeleteTransactionEvent {
  const _$_DeleteTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.deletetransaction()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DeleteTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return deletetransaction();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return deletetransaction?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (deletetransaction != null) {
      return deletetransaction();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return deletetransaction(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return deletetransaction?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (deletetransaction != null) {
      return deletetransaction(this);
    }
    return orElse();
  }
}

abstract class _DeleteTransactionEvent implements TransactionEvent {
  const factory _DeleteTransactionEvent() = _$_DeleteTransactionEvent;
}

/// @nodoc
abstract class _$$_ConvertTransactionEventCopyWith<$Res> {
  factory _$$_ConvertTransactionEventCopyWith(_$_ConvertTransactionEvent value,
          $Res Function(_$_ConvertTransactionEvent) then) =
      __$$_ConvertTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_ConvertTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_ConvertTransactionEvent>
    implements _$$_ConvertTransactionEventCopyWith<$Res> {
  __$$_ConvertTransactionEventCopyWithImpl(_$_ConvertTransactionEvent _value,
      $Res Function(_$_ConvertTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_ConvertTransactionEvent implements _ConvertTransactionEvent {
  const _$_ConvertTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.fetchconvert()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_ConvertTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchconvert();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchconvert?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchconvert != null) {
      return fetchconvert();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchconvert(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchconvert?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchconvert != null) {
      return fetchconvert(this);
    }
    return orElse();
  }
}

abstract class _ConvertTransactionEvent implements TransactionEvent {
  const factory _ConvertTransactionEvent() = _$_ConvertTransactionEvent;
}

/// @nodoc
abstract class _$$_MintTokenTransactionEventCopyWith<$Res> {
  factory _$$_MintTokenTransactionEventCopyWith(
          _$_MintTokenTransactionEvent value,
          $Res Function(_$_MintTokenTransactionEvent) then) =
      __$$_MintTokenTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_MintTokenTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_MintTokenTransactionEvent>
    implements _$$_MintTokenTransactionEventCopyWith<$Res> {
  __$$_MintTokenTransactionEventCopyWithImpl(
      _$_MintTokenTransactionEvent _value,
      $Res Function(_$_MintTokenTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_MintTokenTransactionEvent implements _MintTokenTransactionEvent {
  const _$_MintTokenTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.minttoken()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_MintTokenTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return minttoken();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return minttoken?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (minttoken != null) {
      return minttoken();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return minttoken(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return minttoken?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (minttoken != null) {
      return minttoken(this);
    }
    return orElse();
  }
}

abstract class _MintTokenTransactionEvent implements TransactionEvent {
  const factory _MintTokenTransactionEvent() = _$_MintTokenTransactionEvent;
}

/// @nodoc
abstract class _$$_SetupSalesTransactionEventCopyWith<$Res> {
  factory _$$_SetupSalesTransactionEventCopyWith(
          _$_SetupSalesTransactionEvent value,
          $Res Function(_$_SetupSalesTransactionEvent) then) =
      __$$_SetupSalesTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_SetupSalesTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_SetupSalesTransactionEvent>
    implements _$$_SetupSalesTransactionEventCopyWith<$Res> {
  __$$_SetupSalesTransactionEventCopyWithImpl(
      _$_SetupSalesTransactionEvent _value,
      $Res Function(_$_SetupSalesTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_SetupSalesTransactionEvent implements _SetupSalesTransactionEvent {
  const _$_SetupSalesTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.setupsales()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SetupSalesTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return setupsales();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return setupsales?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (setupsales != null) {
      return setupsales();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return setupsales(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return setupsales?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (setupsales != null) {
      return setupsales(this);
    }
    return orElse();
  }
}

abstract class _SetupSalesTransactionEvent implements TransactionEvent {
  const factory _SetupSalesTransactionEvent() = _$_SetupSalesTransactionEvent;
}

/// @nodoc
abstract class _$$_SetupAuctionTransactionEventCopyWith<$Res> {
  factory _$$_SetupAuctionTransactionEventCopyWith(
          _$_SetupAuctionTransactionEvent value,
          $Res Function(_$_SetupAuctionTransactionEvent) then) =
      __$$_SetupAuctionTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_SetupAuctionTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_SetupAuctionTransactionEvent>
    implements _$$_SetupAuctionTransactionEventCopyWith<$Res> {
  __$$_SetupAuctionTransactionEventCopyWithImpl(
      _$_SetupAuctionTransactionEvent _value,
      $Res Function(_$_SetupAuctionTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_SetupAuctionTransactionEvent implements _SetupAuctionTransactionEvent {
  const _$_SetupAuctionTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.setupauction()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SetupAuctionTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return setupauction();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return setupauction?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (setupauction != null) {
      return setupauction();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return setupauction(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return setupauction?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (setupauction != null) {
      return setupauction(this);
    }
    return orElse();
  }
}

abstract class _SetupAuctionTransactionEvent implements TransactionEvent {
  const factory _SetupAuctionTransactionEvent() =
      _$_SetupAuctionTransactionEvent;
}

/// @nodoc
abstract class _$$_AcceptBidTransactionEventCopyWith<$Res> {
  factory _$$_AcceptBidTransactionEventCopyWith(
          _$_AcceptBidTransactionEvent value,
          $Res Function(_$_AcceptBidTransactionEvent) then) =
      __$$_AcceptBidTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AcceptBidTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_AcceptBidTransactionEvent>
    implements _$$_AcceptBidTransactionEventCopyWith<$Res> {
  __$$_AcceptBidTransactionEventCopyWithImpl(
      _$_AcceptBidTransactionEvent _value,
      $Res Function(_$_AcceptBidTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AcceptBidTransactionEvent implements _AcceptBidTransactionEvent {
  const _$_AcceptBidTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.acceptbid()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AcceptBidTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return acceptbid();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return acceptbid?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (acceptbid != null) {
      return acceptbid();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return acceptbid(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return acceptbid?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (acceptbid != null) {
      return acceptbid(this);
    }
    return orElse();
  }
}

abstract class _AcceptBidTransactionEvent implements TransactionEvent {
  const factory _AcceptBidTransactionEvent() = _$_AcceptBidTransactionEvent;
}

/// @nodoc
abstract class _$$_AcceptOfferTransactionEventCopyWith<$Res> {
  factory _$$_AcceptOfferTransactionEventCopyWith(
          _$_AcceptOfferTransactionEvent value,
          $Res Function(_$_AcceptOfferTransactionEvent) then) =
      __$$_AcceptOfferTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AcceptOfferTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_AcceptOfferTransactionEvent>
    implements _$$_AcceptOfferTransactionEventCopyWith<$Res> {
  __$$_AcceptOfferTransactionEventCopyWithImpl(
      _$_AcceptOfferTransactionEvent _value,
      $Res Function(_$_AcceptOfferTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AcceptOfferTransactionEvent implements _AcceptOfferTransactionEvent {
  const _$_AcceptOfferTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.acceptoffer()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AcceptOfferTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return acceptoffer();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return acceptoffer?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (acceptoffer != null) {
      return acceptoffer();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return acceptoffer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return acceptoffer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (acceptoffer != null) {
      return acceptoffer(this);
    }
    return orElse();
  }
}

abstract class _AcceptOfferTransactionEvent implements TransactionEvent {
  const factory _AcceptOfferTransactionEvent() = _$_AcceptOfferTransactionEvent;
}

/// @nodoc
abstract class _$$_DeclineOfferTransactionEventCopyWith<$Res> {
  factory _$$_DeclineOfferTransactionEventCopyWith(
          _$_DeclineOfferTransactionEvent value,
          $Res Function(_$_DeclineOfferTransactionEvent) then) =
      __$$_DeclineOfferTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_DeclineOfferTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_DeclineOfferTransactionEvent>
    implements _$$_DeclineOfferTransactionEventCopyWith<$Res> {
  __$$_DeclineOfferTransactionEventCopyWithImpl(
      _$_DeclineOfferTransactionEvent _value,
      $Res Function(_$_DeclineOfferTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_DeclineOfferTransactionEvent implements _DeclineOfferTransactionEvent {
  const _$_DeclineOfferTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.declineoffer()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DeclineOfferTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return declineoffer();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return declineoffer?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (declineoffer != null) {
      return declineoffer();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return declineoffer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return declineoffer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (declineoffer != null) {
      return declineoffer(this);
    }
    return orElse();
  }
}

abstract class _DeclineOfferTransactionEvent implements TransactionEvent {
  const factory _DeclineOfferTransactionEvent() =
      _$_DeclineOfferTransactionEvent;
}

/// @nodoc
abstract class _$$_DeclineBidTransactionEventCopyWith<$Res> {
  factory _$$_DeclineBidTransactionEventCopyWith(
          _$_DeclineBidTransactionEvent value,
          $Res Function(_$_DeclineBidTransactionEvent) then) =
      __$$_DeclineBidTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_DeclineBidTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_DeclineBidTransactionEvent>
    implements _$$_DeclineBidTransactionEventCopyWith<$Res> {
  __$$_DeclineBidTransactionEventCopyWithImpl(
      _$_DeclineBidTransactionEvent _value,
      $Res Function(_$_DeclineBidTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_DeclineBidTransactionEvent implements _DeclineBidTransactionEvent {
  const _$_DeclineBidTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.declinebid()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DeclineBidTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return declinebid();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return declinebid?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (declinebid != null) {
      return declinebid();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return declinebid(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return declinebid?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (declinebid != null) {
      return declinebid(this);
    }
    return orElse();
  }
}

abstract class _DeclineBidTransactionEvent implements TransactionEvent {
  const factory _DeclineBidTransactionEvent() = _$_DeclineBidTransactionEvent;
}

/// @nodoc
abstract class _$$_CancelTransferTransactionEventCopyWith<$Res> {
  factory _$$_CancelTransferTransactionEventCopyWith(
          _$_CancelTransferTransactionEvent value,
          $Res Function(_$_CancelTransferTransactionEvent) then) =
      __$$_CancelTransferTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_CancelTransferTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_CancelTransferTransactionEvent>
    implements _$$_CancelTransferTransactionEventCopyWith<$Res> {
  __$$_CancelTransferTransactionEventCopyWithImpl(
      _$_CancelTransferTransactionEvent _value,
      $Res Function(_$_CancelTransferTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_CancelTransferTransactionEvent
    implements _CancelTransferTransactionEvent {
  const _$_CancelTransferTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.cancel()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_CancelTransferTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return cancel();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return cancel?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (cancel != null) {
      return cancel();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return cancel(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return cancel?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (cancel != null) {
      return cancel(this);
    }
    return orElse();
  }
}

abstract class _CancelTransferTransactionEvent implements TransactionEvent {
  const factory _CancelTransferTransactionEvent() =
      _$_CancelTransferTransactionEvent;
}

/// @nodoc
abstract class _$$_CoinTransferTransactionEventCopyWith<$Res> {
  factory _$$_CoinTransferTransactionEventCopyWith(
          _$_CoinTransferTransactionEvent value,
          $Res Function(_$_CoinTransferTransactionEvent) then) =
      __$$_CoinTransferTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_CoinTransferTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_CoinTransferTransactionEvent>
    implements _$$_CoinTransferTransactionEventCopyWith<$Res> {
  __$$_CoinTransferTransactionEventCopyWithImpl(
      _$_CoinTransferTransactionEvent _value,
      $Res Function(_$_CoinTransferTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_CoinTransferTransactionEvent implements _CoinTransferTransactionEvent {
  const _$_CoinTransferTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.cointransfer()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_CoinTransferTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return cointransfer();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return cointransfer?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (cointransfer != null) {
      return cointransfer();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return cointransfer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return cointransfer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (cointransfer != null) {
      return cointransfer(this);
    }
    return orElse();
  }
}

abstract class _CoinTransferTransactionEvent implements TransactionEvent {
  const factory _CoinTransferTransactionEvent() =
      _$_CoinTransferTransactionEvent;
}

/// @nodoc
abstract class _$$_CryptoPaymentTransactionEventCopyWith<$Res> {
  factory _$$_CryptoPaymentTransactionEventCopyWith(
          _$_CryptoPaymentTransactionEvent value,
          $Res Function(_$_CryptoPaymentTransactionEvent) then) =
      __$$_CryptoPaymentTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_CryptoPaymentTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_CryptoPaymentTransactionEvent>
    implements _$$_CryptoPaymentTransactionEventCopyWith<$Res> {
  __$$_CryptoPaymentTransactionEventCopyWithImpl(
      _$_CryptoPaymentTransactionEvent _value,
      $Res Function(_$_CryptoPaymentTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_CryptoPaymentTransactionEvent
    implements _CryptoPaymentTransactionEvent {
  const _$_CryptoPaymentTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.cryptopayment()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_CryptoPaymentTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return cryptopayment();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return cryptopayment?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (cryptopayment != null) {
      return cryptopayment();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return cryptopayment(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return cryptopayment?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (cryptopayment != null) {
      return cryptopayment(this);
    }
    return orElse();
  }
}

abstract class _CryptoPaymentTransactionEvent implements TransactionEvent {
  const factory _CryptoPaymentTransactionEvent() =
      _$_CryptoPaymentTransactionEvent;
}

/// @nodoc
abstract class _$$_StartCardPaymentTransactionEventCopyWith<$Res> {
  factory _$$_StartCardPaymentTransactionEventCopyWith(
          _$_StartCardPaymentTransactionEvent value,
          $Res Function(_$_StartCardPaymentTransactionEvent) then) =
      __$$_StartCardPaymentTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_StartCardPaymentTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_StartCardPaymentTransactionEvent>
    implements _$$_StartCardPaymentTransactionEventCopyWith<$Res> {
  __$$_StartCardPaymentTransactionEventCopyWithImpl(
      _$_StartCardPaymentTransactionEvent _value,
      $Res Function(_$_StartCardPaymentTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_StartCardPaymentTransactionEvent
    implements _StartCardPaymentTransactionEvent {
  const _$_StartCardPaymentTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.startcardpayment()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_StartCardPaymentTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return startcardpayment();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return startcardpayment?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (startcardpayment != null) {
      return startcardpayment();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return startcardpayment(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return startcardpayment?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (startcardpayment != null) {
      return startcardpayment(this);
    }
    return orElse();
  }
}

abstract class _StartCardPaymentTransactionEvent implements TransactionEvent {
  const factory _StartCardPaymentTransactionEvent() =
      _$_StartCardPaymentTransactionEvent;
}

/// @nodoc
abstract class _$$_StartCardOfferTransactionEventCopyWith<$Res> {
  factory _$$_StartCardOfferTransactionEventCopyWith(
          _$_StartCardOfferTransactionEvent value,
          $Res Function(_$_StartCardOfferTransactionEvent) then) =
      __$$_StartCardOfferTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_StartCardOfferTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_StartCardOfferTransactionEvent>
    implements _$$_StartCardOfferTransactionEventCopyWith<$Res> {
  __$$_StartCardOfferTransactionEventCopyWithImpl(
      _$_StartCardOfferTransactionEvent _value,
      $Res Function(_$_StartCardOfferTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_StartCardOfferTransactionEvent
    implements _StartCardOfferTransactionEvent {
  const _$_StartCardOfferTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.startcardofferpayment()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_StartCardOfferTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return startcardofferpayment();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return startcardofferpayment?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (startcardofferpayment != null) {
      return startcardofferpayment();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return startcardofferpayment(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return startcardofferpayment?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (startcardofferpayment != null) {
      return startcardofferpayment(this);
    }
    return orElse();
  }
}

abstract class _StartCardOfferTransactionEvent implements TransactionEvent {
  const factory _StartCardOfferTransactionEvent() =
      _$_StartCardOfferTransactionEvent;
}

/// @nodoc
abstract class _$$_NftTransferTransactionEventCopyWith<$Res> {
  factory _$$_NftTransferTransactionEventCopyWith(
          _$_NftTransferTransactionEvent value,
          $Res Function(_$_NftTransferTransactionEvent) then) =
      __$$_NftTransferTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_NftTransferTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_NftTransferTransactionEvent>
    implements _$$_NftTransferTransactionEventCopyWith<$Res> {
  __$$_NftTransferTransactionEventCopyWithImpl(
      _$_NftTransferTransactionEvent _value,
      $Res Function(_$_NftTransferTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_NftTransferTransactionEvent implements _NftTransferTransactionEvent {
  const _$_NftTransferTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.nfttransfer()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_NftTransferTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return nfttransfer();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return nfttransfer?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (nfttransfer != null) {
      return nfttransfer();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return nfttransfer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return nfttransfer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (nfttransfer != null) {
      return nfttransfer(this);
    }
    return orElse();
  }
}

abstract class _NftTransferTransactionEvent implements TransactionEvent {
  const factory _NftTransferTransactionEvent() = _$_NftTransferTransactionEvent;
}

/// @nodoc
abstract class _$$_StartCryptoBidTransactionEventCopyWith<$Res> {
  factory _$$_StartCryptoBidTransactionEventCopyWith(
          _$_StartCryptoBidTransactionEvent value,
          $Res Function(_$_StartCryptoBidTransactionEvent) then) =
      __$$_StartCryptoBidTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_StartCryptoBidTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_StartCryptoBidTransactionEvent>
    implements _$$_StartCryptoBidTransactionEventCopyWith<$Res> {
  __$$_StartCryptoBidTransactionEventCopyWithImpl(
      _$_StartCryptoBidTransactionEvent _value,
      $Res Function(_$_StartCryptoBidTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_StartCryptoBidTransactionEvent
    implements _StartCryptoBidTransactionEvent {
  const _$_StartCryptoBidTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.startcryptobid()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_StartCryptoBidTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return startcryptobid();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return startcryptobid?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (startcryptobid != null) {
      return startcryptobid();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return startcryptobid(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return startcryptobid?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (startcryptobid != null) {
      return startcryptobid(this);
    }
    return orElse();
  }
}

abstract class _StartCryptoBidTransactionEvent implements TransactionEvent {
  const factory _StartCryptoBidTransactionEvent() =
      _$_StartCryptoBidTransactionEvent;
}

/// @nodoc
abstract class _$$_OnmetaTransactionEventCopyWith<$Res> {
  factory _$$_OnmetaTransactionEventCopyWith(_$_OnmetaTransactionEvent value,
          $Res Function(_$_OnmetaTransactionEvent) then) =
      __$$_OnmetaTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OnmetaTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_OnmetaTransactionEvent>
    implements _$$_OnmetaTransactionEventCopyWith<$Res> {
  __$$_OnmetaTransactionEventCopyWithImpl(_$_OnmetaTransactionEvent _value,
      $Res Function(_$_OnmetaTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OnmetaTransactionEvent implements _OnmetaTransactionEvent {
  const _$_OnmetaTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.onmeta()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OnmetaTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return onmeta();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return onmeta?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmeta != null) {
      return onmeta();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return onmeta(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return onmeta?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmeta != null) {
      return onmeta(this);
    }
    return orElse();
  }
}

abstract class _OnmetaTransactionEvent implements TransactionEvent {
  const factory _OnmetaTransactionEvent() = _$_OnmetaTransactionEvent;
}

/// @nodoc
abstract class _$$_OnmetacreateOnrampOrderTransactionEventCopyWith<$Res> {
  factory _$$_OnmetacreateOnrampOrderTransactionEventCopyWith(
          _$_OnmetacreateOnrampOrderTransactionEvent value,
          $Res Function(_$_OnmetacreateOnrampOrderTransactionEvent) then) =
      __$$_OnmetacreateOnrampOrderTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OnmetacreateOnrampOrderTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_OnmetacreateOnrampOrderTransactionEvent>
    implements _$$_OnmetacreateOnrampOrderTransactionEventCopyWith<$Res> {
  __$$_OnmetacreateOnrampOrderTransactionEventCopyWithImpl(
      _$_OnmetacreateOnrampOrderTransactionEvent _value,
      $Res Function(_$_OnmetacreateOnrampOrderTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OnmetacreateOnrampOrderTransactionEvent
    implements _OnmetacreateOnrampOrderTransactionEvent {
  const _$_OnmetacreateOnrampOrderTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.onmetacreateonramporder()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OnmetacreateOnrampOrderTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return onmetacreateonramporder();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return onmetacreateonramporder?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetacreateonramporder != null) {
      return onmetacreateonramporder();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return onmetacreateonramporder(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return onmetacreateonramporder?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetacreateonramporder != null) {
      return onmetacreateonramporder(this);
    }
    return orElse();
  }
}

abstract class _OnmetacreateOnrampOrderTransactionEvent
    implements TransactionEvent {
  const factory _OnmetacreateOnrampOrderTransactionEvent() =
      _$_OnmetacreateOnrampOrderTransactionEvent;
}

/// @nodoc
abstract class _$$_OnmetaRefreshAccessTokenTransactionEventCopyWith<$Res> {
  factory _$$_OnmetaRefreshAccessTokenTransactionEventCopyWith(
          _$_OnmetaRefreshAccessTokenTransactionEvent value,
          $Res Function(_$_OnmetaRefreshAccessTokenTransactionEvent) then) =
      __$$_OnmetaRefreshAccessTokenTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OnmetaRefreshAccessTokenTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_OnmetaRefreshAccessTokenTransactionEvent>
    implements _$$_OnmetaRefreshAccessTokenTransactionEventCopyWith<$Res> {
  __$$_OnmetaRefreshAccessTokenTransactionEventCopyWithImpl(
      _$_OnmetaRefreshAccessTokenTransactionEvent _value,
      $Res Function(_$_OnmetaRefreshAccessTokenTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OnmetaRefreshAccessTokenTransactionEvent
    implements _OnmetaRefreshAccessTokenTransactionEvent {
  const _$_OnmetaRefreshAccessTokenTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.onmetarefreshaccesstoken()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OnmetaRefreshAccessTokenTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return onmetarefreshaccesstoken();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return onmetarefreshaccesstoken?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetarefreshaccesstoken != null) {
      return onmetarefreshaccesstoken();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return onmetarefreshaccesstoken(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return onmetarefreshaccesstoken?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetarefreshaccesstoken != null) {
      return onmetarefreshaccesstoken(this);
    }
    return orElse();
  }
}

abstract class _OnmetaRefreshAccessTokenTransactionEvent
    implements TransactionEvent {
  const factory _OnmetaRefreshAccessTokenTransactionEvent() =
      _$_OnmetaRefreshAccessTokenTransactionEvent;
}

/// @nodoc
abstract class _$$_OnmetagetCurrenciesTransactionEventCopyWith<$Res> {
  factory _$$_OnmetagetCurrenciesTransactionEventCopyWith(
          _$_OnmetagetCurrenciesTransactionEvent value,
          $Res Function(_$_OnmetagetCurrenciesTransactionEvent) then) =
      __$$_OnmetagetCurrenciesTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OnmetagetCurrenciesTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_OnmetagetCurrenciesTransactionEvent>
    implements _$$_OnmetagetCurrenciesTransactionEventCopyWith<$Res> {
  __$$_OnmetagetCurrenciesTransactionEventCopyWithImpl(
      _$_OnmetagetCurrenciesTransactionEvent _value,
      $Res Function(_$_OnmetagetCurrenciesTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OnmetagetCurrenciesTransactionEvent
    implements _OnmetagetCurrenciesTransactionEvent {
  const _$_OnmetagetCurrenciesTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.onmetagetcurrencies()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OnmetagetCurrenciesTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return onmetagetcurrencies();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return onmetagetcurrencies?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetagetcurrencies != null) {
      return onmetagetcurrencies();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return onmetagetcurrencies(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return onmetagetcurrencies?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetagetcurrencies != null) {
      return onmetagetcurrencies(this);
    }
    return orElse();
  }
}

abstract class _OnmetagetCurrenciesTransactionEvent
    implements TransactionEvent {
  const factory _OnmetagetCurrenciesTransactionEvent() =
      _$_OnmetagetCurrenciesTransactionEvent;
}

/// @nodoc
abstract class _$$_OnmetagetOrderHistoryTransactionEventCopyWith<$Res> {
  factory _$$_OnmetagetOrderHistoryTransactionEventCopyWith(
          _$_OnmetagetOrderHistoryTransactionEvent value,
          $Res Function(_$_OnmetagetOrderHistoryTransactionEvent) then) =
      __$$_OnmetagetOrderHistoryTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OnmetagetOrderHistoryTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_OnmetagetOrderHistoryTransactionEvent>
    implements _$$_OnmetagetOrderHistoryTransactionEventCopyWith<$Res> {
  __$$_OnmetagetOrderHistoryTransactionEventCopyWithImpl(
      _$_OnmetagetOrderHistoryTransactionEvent _value,
      $Res Function(_$_OnmetagetOrderHistoryTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OnmetagetOrderHistoryTransactionEvent
    implements _OnmetagetOrderHistoryTransactionEvent {
  const _$_OnmetagetOrderHistoryTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.onmetagetorderhistory()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OnmetagetOrderHistoryTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return onmetagetorderhistory();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return onmetagetorderhistory?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetagetorderhistory != null) {
      return onmetagetorderhistory();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return onmetagetorderhistory(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return onmetagetorderhistory?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetagetorderhistory != null) {
      return onmetagetorderhistory(this);
    }
    return orElse();
  }
}

abstract class _OnmetagetOrderHistoryTransactionEvent
    implements TransactionEvent {
  const factory _OnmetagetOrderHistoryTransactionEvent() =
      _$_OnmetagetOrderHistoryTransactionEvent;
}

/// @nodoc
abstract class _$$_OnmetagetTokensTransactionEventCopyWith<$Res> {
  factory _$$_OnmetagetTokensTransactionEventCopyWith(
          _$_OnmetagetTokensTransactionEvent value,
          $Res Function(_$_OnmetagetTokensTransactionEvent) then) =
      __$$_OnmetagetTokensTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OnmetagetTokensTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_OnmetagetTokensTransactionEvent>
    implements _$$_OnmetagetTokensTransactionEventCopyWith<$Res> {
  __$$_OnmetagetTokensTransactionEventCopyWithImpl(
      _$_OnmetagetTokensTransactionEvent _value,
      $Res Function(_$_OnmetagetTokensTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OnmetagetTokensTransactionEvent
    implements _OnmetagetTokensTransactionEvent {
  const _$_OnmetagetTokensTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.onmetagettokens()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OnmetagetTokensTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return onmetagettokens();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return onmetagettokens?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetagettokens != null) {
      return onmetagettokens();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return onmetagettokens(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return onmetagettokens?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetagettokens != null) {
      return onmetagettokens(this);
    }
    return orElse();
  }
}

abstract class _OnmetagetTokensTransactionEvent implements TransactionEvent {
  const factory _OnmetagetTokensTransactionEvent() =
      _$_OnmetagetTokensTransactionEvent;
}

/// @nodoc
abstract class _$$_OnmetacreateOfferampOrderTransactionEventCopyWith<$Res> {
  factory _$$_OnmetacreateOfferampOrderTransactionEventCopyWith(
          _$_OnmetacreateOfferampOrderTransactionEvent value,
          $Res Function(_$_OnmetacreateOfferampOrderTransactionEvent) then) =
      __$$_OnmetacreateOfferampOrderTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OnmetacreateOfferampOrderTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_OnmetacreateOfferampOrderTransactionEvent>
    implements _$$_OnmetacreateOfferampOrderTransactionEventCopyWith<$Res> {
  __$$_OnmetacreateOfferampOrderTransactionEventCopyWithImpl(
      _$_OnmetacreateOfferampOrderTransactionEvent _value,
      $Res Function(_$_OnmetacreateOfferampOrderTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OnmetacreateOfferampOrderTransactionEvent
    implements _OnmetacreateOfferampOrderTransactionEvent {
  const _$_OnmetacreateOfferampOrderTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.onmetacreateofferramp()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OnmetacreateOfferampOrderTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return onmetacreateofferramp();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return onmetacreateofferramp?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetacreateofferramp != null) {
      return onmetacreateofferramp();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return onmetacreateofferramp(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return onmetacreateofferramp?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetacreateofferramp != null) {
      return onmetacreateofferramp(this);
    }
    return orElse();
  }
}

abstract class _OnmetacreateOfferampOrderTransactionEvent
    implements TransactionEvent {
  const factory _OnmetacreateOfferampOrderTransactionEvent() =
      _$_OnmetacreateOfferampOrderTransactionEvent;
}

/// @nodoc
abstract class _$$_OnmetagetQuatationByFiatAmtTransactionEventCopyWith<$Res> {
  factory _$$_OnmetagetQuatationByFiatAmtTransactionEventCopyWith(
          _$_OnmetagetQuatationByFiatAmtTransactionEvent value,
          $Res Function(_$_OnmetagetQuatationByFiatAmtTransactionEvent) then) =
      __$$_OnmetagetQuatationByFiatAmtTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OnmetagetQuatationByFiatAmtTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_OnmetagetQuatationByFiatAmtTransactionEvent>
    implements _$$_OnmetagetQuatationByFiatAmtTransactionEventCopyWith<$Res> {
  __$$_OnmetagetQuatationByFiatAmtTransactionEventCopyWithImpl(
      _$_OnmetagetQuatationByFiatAmtTransactionEvent _value,
      $Res Function(_$_OnmetagetQuatationByFiatAmtTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OnmetagetQuatationByFiatAmtTransactionEvent
    implements _OnmetagetQuatationByFiatAmtTransactionEvent {
  const _$_OnmetagetQuatationByFiatAmtTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.onmetagetquatationbyfiatamt()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OnmetagetQuatationByFiatAmtTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return onmetagetquatationbyfiatamt();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return onmetagetquatationbyfiatamt?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetagetquatationbyfiatamt != null) {
      return onmetagetquatationbyfiatamt();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return onmetagetquatationbyfiatamt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return onmetagetquatationbyfiatamt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetagetquatationbyfiatamt != null) {
      return onmetagetquatationbyfiatamt(this);
    }
    return orElse();
  }
}

abstract class _OnmetagetQuatationByFiatAmtTransactionEvent
    implements TransactionEvent {
  const factory _OnmetagetQuatationByFiatAmtTransactionEvent() =
      _$_OnmetagetQuatationByFiatAmtTransactionEvent;
}

/// @nodoc
abstract class _$$_StartCardBidTransactionEventCopyWith<$Res> {
  factory _$$_StartCardBidTransactionEventCopyWith(
          _$_StartCardBidTransactionEvent value,
          $Res Function(_$_StartCardBidTransactionEvent) then) =
      __$$_StartCardBidTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_StartCardBidTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_StartCardBidTransactionEvent>
    implements _$$_StartCardBidTransactionEventCopyWith<$Res> {
  __$$_StartCardBidTransactionEventCopyWithImpl(
      _$_StartCardBidTransactionEvent _value,
      $Res Function(_$_StartCardBidTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_StartCardBidTransactionEvent implements _StartCardBidTransactionEvent {
  const _$_StartCardBidTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.startcardbid()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_StartCardBidTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return startcardbid();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return startcardbid?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (startcardbid != null) {
      return startcardbid();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return startcardbid(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return startcardbid?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (startcardbid != null) {
      return startcardbid(this);
    }
    return orElse();
  }
}

abstract class _StartCardBidTransactionEvent implements TransactionEvent {
  const factory _StartCardBidTransactionEvent() =
      _$_StartCardBidTransactionEvent;
}

/// @nodoc
abstract class _$$_OnmetaacceptOnrampOrderTransactionEventCopyWith<$Res> {
  factory _$$_OnmetaacceptOnrampOrderTransactionEventCopyWith(
          _$_OnmetaacceptOnrampOrderTransactionEvent value,
          $Res Function(_$_OnmetaacceptOnrampOrderTransactionEvent) then) =
      __$$_OnmetaacceptOnrampOrderTransactionEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OnmetaacceptOnrampOrderTransactionEventCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res,
        _$_OnmetaacceptOnrampOrderTransactionEvent>
    implements _$$_OnmetaacceptOnrampOrderTransactionEventCopyWith<$Res> {
  __$$_OnmetaacceptOnrampOrderTransactionEventCopyWithImpl(
      _$_OnmetaacceptOnrampOrderTransactionEvent _value,
      $Res Function(_$_OnmetaacceptOnrampOrderTransactionEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OnmetaacceptOnrampOrderTransactionEvent
    implements _OnmetaacceptOnrampOrderTransactionEvent {
  const _$_OnmetaacceptOnrampOrderTransactionEvent();

  @override
  String toString() {
    return 'TransactionEvent.onmetaacceptonramporder()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OnmetaacceptOnrampOrderTransactionEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return onmetaacceptonramporder();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return onmetaacceptonramporder?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetaacceptonramporder != null) {
      return onmetaacceptonramporder();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return onmetaacceptonramporder(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return onmetaacceptonramporder?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (onmetaacceptonramporder != null) {
      return onmetaacceptonramporder(this);
    }
    return orElse();
  }
}

abstract class _OnmetaacceptOnrampOrderTransactionEvent
    implements TransactionEvent {
  const factory _OnmetaacceptOnrampOrderTransactionEvent() =
      _$_OnmetaacceptOnrampOrderTransactionEvent;
}

/// @nodoc
abstract class _$$_FetchLiveUpcomimgAuctionsCopyWith<$Res> {
  factory _$$_FetchLiveUpcomimgAuctionsCopyWith(
          _$_FetchLiveUpcomimgAuctions value,
          $Res Function(_$_FetchLiveUpcomimgAuctions) then) =
      __$$_FetchLiveUpcomimgAuctionsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchLiveUpcomimgAuctionsCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_FetchLiveUpcomimgAuctions>
    implements _$$_FetchLiveUpcomimgAuctionsCopyWith<$Res> {
  __$$_FetchLiveUpcomimgAuctionsCopyWithImpl(
      _$_FetchLiveUpcomimgAuctions _value,
      $Res Function(_$_FetchLiveUpcomimgAuctions) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchLiveUpcomimgAuctions implements _FetchLiveUpcomimgAuctions {
  const _$_FetchLiveUpcomimgAuctions();

  @override
  String toString() {
    return 'TransactionEvent.fetchliveupcomimgauctions()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchLiveUpcomimgAuctions);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchliveupcomimgauctions();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchliveupcomimgauctions?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchliveupcomimgauctions != null) {
      return fetchliveupcomimgauctions();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchliveupcomimgauctions(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchliveupcomimgauctions?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchliveupcomimgauctions != null) {
      return fetchliveupcomimgauctions(this);
    }
    return orElse();
  }
}

abstract class _FetchLiveUpcomimgAuctions implements TransactionEvent {
  const factory _FetchLiveUpcomimgAuctions() = _$_FetchLiveUpcomimgAuctions;
}

/// @nodoc
abstract class _$$_FetchLiveUpcomingDropsCopyWith<$Res> {
  factory _$$_FetchLiveUpcomingDropsCopyWith(_$_FetchLiveUpcomingDrops value,
          $Res Function(_$_FetchLiveUpcomingDrops) then) =
      __$$_FetchLiveUpcomingDropsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchLiveUpcomingDropsCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_FetchLiveUpcomingDrops>
    implements _$$_FetchLiveUpcomingDropsCopyWith<$Res> {
  __$$_FetchLiveUpcomingDropsCopyWithImpl(_$_FetchLiveUpcomingDrops _value,
      $Res Function(_$_FetchLiveUpcomingDrops) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchLiveUpcomingDrops implements _FetchLiveUpcomingDrops {
  const _$_FetchLiveUpcomingDrops();

  @override
  String toString() {
    return 'TransactionEvent.fetchliveupcomingdrops()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchLiveUpcomingDrops);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchliveupcomingdrops();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchliveupcomingdrops?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchliveupcomingdrops != null) {
      return fetchliveupcomingdrops();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchliveupcomingdrops(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchliveupcomingdrops?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchliveupcomingdrops != null) {
      return fetchliveupcomingdrops(this);
    }
    return orElse();
  }
}

abstract class _FetchLiveUpcomingDrops implements TransactionEvent {
  const factory _FetchLiveUpcomingDrops() = _$_FetchLiveUpcomingDrops;
}

/// @nodoc
abstract class _$$_FetchTopCollectorsCopyWith<$Res> {
  factory _$$_FetchTopCollectorsCopyWith(_$_FetchTopCollectors value,
          $Res Function(_$_FetchTopCollectors) then) =
      __$$_FetchTopCollectorsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchTopCollectorsCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_FetchTopCollectors>
    implements _$$_FetchTopCollectorsCopyWith<$Res> {
  __$$_FetchTopCollectorsCopyWithImpl(
      _$_FetchTopCollectors _value, $Res Function(_$_FetchTopCollectors) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchTopCollectors implements _FetchTopCollectors {
  const _$_FetchTopCollectors();

  @override
  String toString() {
    return 'TransactionEvent.fetchtopcollectors()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_FetchTopCollectors);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchtopcollectors();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchtopcollectors?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchtopcollectors != null) {
      return fetchtopcollectors();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchtopcollectors(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchtopcollectors?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchtopcollectors != null) {
      return fetchtopcollectors(this);
    }
    return orElse();
  }
}

abstract class _FetchTopCollectors implements TransactionEvent {
  const factory _FetchTopCollectors() = _$_FetchTopCollectors;
}

/// @nodoc
abstract class _$$_FetchFeaturedCreationsCopyWith<$Res> {
  factory _$$_FetchFeaturedCreationsCopyWith(_$_FetchFeaturedCreations value,
          $Res Function(_$_FetchFeaturedCreations) then) =
      __$$_FetchFeaturedCreationsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchFeaturedCreationsCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_FetchFeaturedCreations>
    implements _$$_FetchFeaturedCreationsCopyWith<$Res> {
  __$$_FetchFeaturedCreationsCopyWithImpl(_$_FetchFeaturedCreations _value,
      $Res Function(_$_FetchFeaturedCreations) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchFeaturedCreations implements _FetchFeaturedCreations {
  const _$_FetchFeaturedCreations();

  @override
  String toString() {
    return 'TransactionEvent.fetchfeaturedcreations()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchFeaturedCreations);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchfeaturedcreations();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchfeaturedcreations?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchfeaturedcreations != null) {
      return fetchfeaturedcreations();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchfeaturedcreations(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchfeaturedcreations?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchfeaturedcreations != null) {
      return fetchfeaturedcreations(this);
    }
    return orElse();
  }
}

abstract class _FetchFeaturedCreations implements TransactionEvent {
  const factory _FetchFeaturedCreations() = _$_FetchFeaturedCreations;
}

/// @nodoc
abstract class _$$_FetchFeaturedCreatorsCopyWith<$Res> {
  factory _$$_FetchFeaturedCreatorsCopyWith(_$_FetchFeaturedCreators value,
          $Res Function(_$_FetchFeaturedCreators) then) =
      __$$_FetchFeaturedCreatorsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchFeaturedCreatorsCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_FetchFeaturedCreators>
    implements _$$_FetchFeaturedCreatorsCopyWith<$Res> {
  __$$_FetchFeaturedCreatorsCopyWithImpl(_$_FetchFeaturedCreators _value,
      $Res Function(_$_FetchFeaturedCreators) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchFeaturedCreators implements _FetchFeaturedCreators {
  const _$_FetchFeaturedCreators();

  @override
  String toString() {
    return 'TransactionEvent.fetchfeaturedcreators()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_FetchFeaturedCreators);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchfeaturedcreators();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchfeaturedcreators?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchfeaturedcreators != null) {
      return fetchfeaturedcreators();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchfeaturedcreators(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchfeaturedcreators?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchfeaturedcreators != null) {
      return fetchfeaturedcreators(this);
    }
    return orElse();
  }
}

abstract class _FetchFeaturedCreators implements TransactionEvent {
  const factory _FetchFeaturedCreators() = _$_FetchFeaturedCreators;
}

/// @nodoc
abstract class _$$_FetchRecentSalesCopyWith<$Res> {
  factory _$$_FetchRecentSalesCopyWith(
          _$_FetchRecentSales value, $Res Function(_$_FetchRecentSales) then) =
      __$$_FetchRecentSalesCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchRecentSalesCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_FetchRecentSales>
    implements _$$_FetchRecentSalesCopyWith<$Res> {
  __$$_FetchRecentSalesCopyWithImpl(
      _$_FetchRecentSales _value, $Res Function(_$_FetchRecentSales) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchRecentSales implements _FetchRecentSales {
  const _$_FetchRecentSales();

  @override
  String toString() {
    return 'TransactionEvent.fetchrecentsales()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_FetchRecentSales);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchrecentsales();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchrecentsales?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchrecentsales != null) {
      return fetchrecentsales();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchrecentsales(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchrecentsales?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchrecentsales != null) {
      return fetchrecentsales(this);
    }
    return orElse();
  }
}

abstract class _FetchRecentSales implements TransactionEvent {
  const factory _FetchRecentSales() = _$_FetchRecentSales;
}

/// @nodoc
abstract class _$$_FetchRecentCreationsCopyWith<$Res> {
  factory _$$_FetchRecentCreationsCopyWith(_$_FetchRecentCreations value,
          $Res Function(_$_FetchRecentCreations) then) =
      __$$_FetchRecentCreationsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchRecentCreationsCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_FetchRecentCreations>
    implements _$$_FetchRecentCreationsCopyWith<$Res> {
  __$$_FetchRecentCreationsCopyWithImpl(_$_FetchRecentCreations _value,
      $Res Function(_$_FetchRecentCreations) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchRecentCreations implements _FetchRecentCreations {
  const _$_FetchRecentCreations();

  @override
  String toString() {
    return 'TransactionEvent.fetchrecentcreations()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_FetchRecentCreations);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchrecentcreations();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchrecentcreations?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchrecentcreations != null) {
      return fetchrecentcreations();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchrecentcreations(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchrecentcreations?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchrecentcreations != null) {
      return fetchrecentcreations(this);
    }
    return orElse();
  }
}

abstract class _FetchRecentCreations implements TransactionEvent {
  const factory _FetchRecentCreations() = _$_FetchRecentCreations;
}

/// @nodoc
abstract class _$$_FetchLiveNftsCopyWith<$Res> {
  factory _$$_FetchLiveNftsCopyWith(
          _$_FetchLiveNfts value, $Res Function(_$_FetchLiveNfts) then) =
      __$$_FetchLiveNftsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchLiveNftsCopyWithImpl<$Res>
    extends _$TransactionEventCopyWithImpl<$Res, _$_FetchLiveNfts>
    implements _$$_FetchLiveNftsCopyWith<$Res> {
  __$$_FetchLiveNftsCopyWithImpl(
      _$_FetchLiveNfts _value, $Res Function(_$_FetchLiveNfts) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchLiveNfts implements _FetchLiveNfts {
  const _$_FetchLiveNfts();

  @override
  String toString() {
    return 'TransactionEvent.fetchlivenfts()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_FetchLiveNfts);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() fetchtransactionlist,
    required TResult Function() fetchtransactionbyid,
    required TResult Function() addtransaction,
    required TResult Function() updatetransaction,
    required TResult Function() coinassetWithdrawn,
    required TResult Function() coinassetDeposit,
    required TResult Function() deletetransaction,
    required TResult Function() fetchconvert,
    required TResult Function() minttoken,
    required TResult Function() setupsales,
    required TResult Function() setupauction,
    required TResult Function() acceptbid,
    required TResult Function() acceptoffer,
    required TResult Function() declineoffer,
    required TResult Function() declinebid,
    required TResult Function() cancel,
    required TResult Function() cointransfer,
    required TResult Function() cryptopayment,
    required TResult Function() startcardpayment,
    required TResult Function() startcardofferpayment,
    required TResult Function() nfttransfer,
    required TResult Function() startcryptobid,
    required TResult Function() onmeta,
    required TResult Function() onmetacreateonramporder,
    required TResult Function() onmetarefreshaccesstoken,
    required TResult Function() onmetagetcurrencies,
    required TResult Function() onmetagetorderhistory,
    required TResult Function() onmetagettokens,
    required TResult Function() onmetacreateofferramp,
    required TResult Function() onmetagetquatationbyfiatamt,
    required TResult Function() startcardbid,
    required TResult Function() onmetaacceptonramporder,
    required TResult Function() fetchliveupcomimgauctions,
    required TResult Function() fetchliveupcomingdrops,
    required TResult Function() fetchtopcollectors,
    required TResult Function() fetchfeaturedcreations,
    required TResult Function() fetchfeaturedcreators,
    required TResult Function() fetchrecentsales,
    required TResult Function() fetchrecentcreations,
    required TResult Function() fetchlivenfts,
  }) {
    return fetchlivenfts();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? fetchtransactionlist,
    TResult? Function()? fetchtransactionbyid,
    TResult? Function()? addtransaction,
    TResult? Function()? updatetransaction,
    TResult? Function()? coinassetWithdrawn,
    TResult? Function()? coinassetDeposit,
    TResult? Function()? deletetransaction,
    TResult? Function()? fetchconvert,
    TResult? Function()? minttoken,
    TResult? Function()? setupsales,
    TResult? Function()? setupauction,
    TResult? Function()? acceptbid,
    TResult? Function()? acceptoffer,
    TResult? Function()? declineoffer,
    TResult? Function()? declinebid,
    TResult? Function()? cancel,
    TResult? Function()? cointransfer,
    TResult? Function()? cryptopayment,
    TResult? Function()? startcardpayment,
    TResult? Function()? startcardofferpayment,
    TResult? Function()? nfttransfer,
    TResult? Function()? startcryptobid,
    TResult? Function()? onmeta,
    TResult? Function()? onmetacreateonramporder,
    TResult? Function()? onmetarefreshaccesstoken,
    TResult? Function()? onmetagetcurrencies,
    TResult? Function()? onmetagetorderhistory,
    TResult? Function()? onmetagettokens,
    TResult? Function()? onmetacreateofferramp,
    TResult? Function()? onmetagetquatationbyfiatamt,
    TResult? Function()? startcardbid,
    TResult? Function()? onmetaacceptonramporder,
    TResult? Function()? fetchliveupcomimgauctions,
    TResult? Function()? fetchliveupcomingdrops,
    TResult? Function()? fetchtopcollectors,
    TResult? Function()? fetchfeaturedcreations,
    TResult? Function()? fetchfeaturedcreators,
    TResult? Function()? fetchrecentsales,
    TResult? Function()? fetchrecentcreations,
    TResult? Function()? fetchlivenfts,
  }) {
    return fetchlivenfts?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? fetchtransactionlist,
    TResult Function()? fetchtransactionbyid,
    TResult Function()? addtransaction,
    TResult Function()? updatetransaction,
    TResult Function()? coinassetWithdrawn,
    TResult Function()? coinassetDeposit,
    TResult Function()? deletetransaction,
    TResult Function()? fetchconvert,
    TResult Function()? minttoken,
    TResult Function()? setupsales,
    TResult Function()? setupauction,
    TResult Function()? acceptbid,
    TResult Function()? acceptoffer,
    TResult Function()? declineoffer,
    TResult Function()? declinebid,
    TResult Function()? cancel,
    TResult Function()? cointransfer,
    TResult Function()? cryptopayment,
    TResult Function()? startcardpayment,
    TResult Function()? startcardofferpayment,
    TResult Function()? nfttransfer,
    TResult Function()? startcryptobid,
    TResult Function()? onmeta,
    TResult Function()? onmetacreateonramporder,
    TResult Function()? onmetarefreshaccesstoken,
    TResult Function()? onmetagetcurrencies,
    TResult Function()? onmetagetorderhistory,
    TResult Function()? onmetagettokens,
    TResult Function()? onmetacreateofferramp,
    TResult Function()? onmetagetquatationbyfiatamt,
    TResult Function()? startcardbid,
    TResult Function()? onmetaacceptonramporder,
    TResult Function()? fetchliveupcomimgauctions,
    TResult Function()? fetchliveupcomingdrops,
    TResult Function()? fetchtopcollectors,
    TResult Function()? fetchfeaturedcreations,
    TResult Function()? fetchfeaturedcreators,
    TResult Function()? fetchrecentsales,
    TResult Function()? fetchrecentcreations,
    TResult Function()? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchlivenfts != null) {
      return fetchlivenfts();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_FetchTransactionListEvent value)
        fetchtransactionlist,
    required TResult Function(_FetchTransactionByIdEvent value)
        fetchtransactionbyid,
    required TResult Function(_AddTransactionEvent value) addtransaction,
    required TResult Function(_UpdateTransactionEvent value) updatetransaction,
    required TResult Function(_CoinWithdrawnTransactionEvent value)
        coinassetWithdrawn,
    required TResult Function(_CoinDepositTransactionEvent value)
        coinassetDeposit,
    required TResult Function(_DeleteTransactionEvent value) deletetransaction,
    required TResult Function(_ConvertTransactionEvent value) fetchconvert,
    required TResult Function(_MintTokenTransactionEvent value) minttoken,
    required TResult Function(_SetupSalesTransactionEvent value) setupsales,
    required TResult Function(_SetupAuctionTransactionEvent value) setupauction,
    required TResult Function(_AcceptBidTransactionEvent value) acceptbid,
    required TResult Function(_AcceptOfferTransactionEvent value) acceptoffer,
    required TResult Function(_DeclineOfferTransactionEvent value) declineoffer,
    required TResult Function(_DeclineBidTransactionEvent value) declinebid,
    required TResult Function(_CancelTransferTransactionEvent value) cancel,
    required TResult Function(_CoinTransferTransactionEvent value) cointransfer,
    required TResult Function(_CryptoPaymentTransactionEvent value)
        cryptopayment,
    required TResult Function(_StartCardPaymentTransactionEvent value)
        startcardpayment,
    required TResult Function(_StartCardOfferTransactionEvent value)
        startcardofferpayment,
    required TResult Function(_NftTransferTransactionEvent value) nfttransfer,
    required TResult Function(_StartCryptoBidTransactionEvent value)
        startcryptobid,
    required TResult Function(_OnmetaTransactionEvent value) onmeta,
    required TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)
        onmetacreateonramporder,
    required TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)
        onmetarefreshaccesstoken,
    required TResult Function(_OnmetagetCurrenciesTransactionEvent value)
        onmetagetcurrencies,
    required TResult Function(_OnmetagetOrderHistoryTransactionEvent value)
        onmetagetorderhistory,
    required TResult Function(_OnmetagetTokensTransactionEvent value)
        onmetagettokens,
    required TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)
        onmetacreateofferramp,
    required TResult Function(
            _OnmetagetQuatationByFiatAmtTransactionEvent value)
        onmetagetquatationbyfiatamt,
    required TResult Function(_StartCardBidTransactionEvent value) startcardbid,
    required TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)
        onmetaacceptonramporder,
    required TResult Function(_FetchLiveUpcomimgAuctions value)
        fetchliveupcomimgauctions,
    required TResult Function(_FetchLiveUpcomingDrops value)
        fetchliveupcomingdrops,
    required TResult Function(_FetchTopCollectors value) fetchtopcollectors,
    required TResult Function(_FetchFeaturedCreations value)
        fetchfeaturedcreations,
    required TResult Function(_FetchFeaturedCreators value)
        fetchfeaturedcreators,
    required TResult Function(_FetchRecentSales value) fetchrecentsales,
    required TResult Function(_FetchRecentCreations value) fetchrecentcreations,
    required TResult Function(_FetchLiveNfts value) fetchlivenfts,
  }) {
    return fetchlivenfts(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult? Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult? Function(_AddTransactionEvent value)? addtransaction,
    TResult? Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult? Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult? Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult? Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult? Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult? Function(_MintTokenTransactionEvent value)? minttoken,
    TResult? Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult? Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult? Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult? Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult? Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult? Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult? Function(_CancelTransferTransactionEvent value)? cancel,
    TResult? Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult? Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult? Function(_StartCardPaymentTransactionEvent value)?
        startcardpayment,
    TResult? Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult? Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult? Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult? Function(_OnmetaTransactionEvent value)? onmeta,
    TResult? Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult? Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult? Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult? Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult? Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult? Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult? Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult? Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult? Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult? Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult? Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult? Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult? Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult? Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult? Function(_FetchRecentSales value)? fetchrecentsales,
    TResult? Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult? Function(_FetchLiveNfts value)? fetchlivenfts,
  }) {
    return fetchlivenfts?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_FetchTransactionListEvent value)? fetchtransactionlist,
    TResult Function(_FetchTransactionByIdEvent value)? fetchtransactionbyid,
    TResult Function(_AddTransactionEvent value)? addtransaction,
    TResult Function(_UpdateTransactionEvent value)? updatetransaction,
    TResult Function(_CoinWithdrawnTransactionEvent value)? coinassetWithdrawn,
    TResult Function(_CoinDepositTransactionEvent value)? coinassetDeposit,
    TResult Function(_DeleteTransactionEvent value)? deletetransaction,
    TResult Function(_ConvertTransactionEvent value)? fetchconvert,
    TResult Function(_MintTokenTransactionEvent value)? minttoken,
    TResult Function(_SetupSalesTransactionEvent value)? setupsales,
    TResult Function(_SetupAuctionTransactionEvent value)? setupauction,
    TResult Function(_AcceptBidTransactionEvent value)? acceptbid,
    TResult Function(_AcceptOfferTransactionEvent value)? acceptoffer,
    TResult Function(_DeclineOfferTransactionEvent value)? declineoffer,
    TResult Function(_DeclineBidTransactionEvent value)? declinebid,
    TResult Function(_CancelTransferTransactionEvent value)? cancel,
    TResult Function(_CoinTransferTransactionEvent value)? cointransfer,
    TResult Function(_CryptoPaymentTransactionEvent value)? cryptopayment,
    TResult Function(_StartCardPaymentTransactionEvent value)? startcardpayment,
    TResult Function(_StartCardOfferTransactionEvent value)?
        startcardofferpayment,
    TResult Function(_NftTransferTransactionEvent value)? nfttransfer,
    TResult Function(_StartCryptoBidTransactionEvent value)? startcryptobid,
    TResult Function(_OnmetaTransactionEvent value)? onmeta,
    TResult Function(_OnmetacreateOnrampOrderTransactionEvent value)?
        onmetacreateonramporder,
    TResult Function(_OnmetaRefreshAccessTokenTransactionEvent value)?
        onmetarefreshaccesstoken,
    TResult Function(_OnmetagetCurrenciesTransactionEvent value)?
        onmetagetcurrencies,
    TResult Function(_OnmetagetOrderHistoryTransactionEvent value)?
        onmetagetorderhistory,
    TResult Function(_OnmetagetTokensTransactionEvent value)? onmetagettokens,
    TResult Function(_OnmetacreateOfferampOrderTransactionEvent value)?
        onmetacreateofferramp,
    TResult Function(_OnmetagetQuatationByFiatAmtTransactionEvent value)?
        onmetagetquatationbyfiatamt,
    TResult Function(_StartCardBidTransactionEvent value)? startcardbid,
    TResult Function(_OnmetaacceptOnrampOrderTransactionEvent value)?
        onmetaacceptonramporder,
    TResult Function(_FetchLiveUpcomimgAuctions value)?
        fetchliveupcomimgauctions,
    TResult Function(_FetchLiveUpcomingDrops value)? fetchliveupcomingdrops,
    TResult Function(_FetchTopCollectors value)? fetchtopcollectors,
    TResult Function(_FetchFeaturedCreations value)? fetchfeaturedcreations,
    TResult Function(_FetchFeaturedCreators value)? fetchfeaturedcreators,
    TResult Function(_FetchRecentSales value)? fetchrecentsales,
    TResult Function(_FetchRecentCreations value)? fetchrecentcreations,
    TResult Function(_FetchLiveNfts value)? fetchlivenfts,
    required TResult orElse(),
  }) {
    if (fetchlivenfts != null) {
      return fetchlivenfts(this);
    }
    return orElse();
  }
}

abstract class _FetchLiveNfts implements TransactionEvent {
  const factory _FetchLiveNfts() = _$_FetchLiveNfts;
}

/// @nodoc
mixin _$TransactionState {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $TransactionStateCopyWith<$Res> {
  factory $TransactionStateCopyWith(
          TransactionState value, $Res Function(TransactionState) then) =
      _$TransactionStateCopyWithImpl<$Res, TransactionState>;
}

/// @nodoc
class _$TransactionStateCopyWithImpl<$Res, $Val extends TransactionState>
    implements $TransactionStateCopyWith<$Res> {
  _$TransactionStateCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;
}

/// @nodoc
abstract class _$$_InitialStateCopyWith<$Res> {
  factory _$$_InitialStateCopyWith(
          _$_InitialState value, $Res Function(_$_InitialState) then) =
      __$$_InitialStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_InitialStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_InitialState>
    implements _$$_InitialStateCopyWith<$Res> {
  __$$_InitialStateCopyWithImpl(
      _$_InitialState _value, $Res Function(_$_InitialState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_InitialState implements _InitialState {
  const _$_InitialState();

  @override
  String toString() {
    return 'TransactionState.initial()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_InitialState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return initial();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return initial?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (initial != null) {
      return initial();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return initial(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return initial?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (initial != null) {
      return initial(this);
    }
    return orElse();
  }
}

abstract class _InitialState implements TransactionState {
  const factory _InitialState() = _$_InitialState;
}

/// @nodoc
abstract class _$$_LoadingTransactionStateCopyWith<$Res> {
  factory _$$_LoadingTransactionStateCopyWith(_$_LoadingTransactionState value,
          $Res Function(_$_LoadingTransactionState) then) =
      __$$_LoadingTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_LoadingTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_LoadingTransactionState>
    implements _$$_LoadingTransactionStateCopyWith<$Res> {
  __$$_LoadingTransactionStateCopyWithImpl(_$_LoadingTransactionState _value,
      $Res Function(_$_LoadingTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_LoadingTransactionState implements _LoadingTransactionState {
  const _$_LoadingTransactionState();

  @override
  String toString() {
    return 'TransactionState.loading()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_LoadingTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return loading();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return loading?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (loading != null) {
      return loading();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return loading(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return loading?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (loading != null) {
      return loading(this);
    }
    return orElse();
  }
}

abstract class _LoadingTransactionState implements TransactionState {
  const factory _LoadingTransactionState() = _$_LoadingTransactionState;
}

/// @nodoc
abstract class _$$_ErrorTransactionStateCopyWith<$Res> {
  factory _$$_ErrorTransactionStateCopyWith(_$_ErrorTransactionState value,
          $Res Function(_$_ErrorTransactionState) then) =
      __$$_ErrorTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_ErrorTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_ErrorTransactionState>
    implements _$$_ErrorTransactionStateCopyWith<$Res> {
  __$$_ErrorTransactionStateCopyWithImpl(_$_ErrorTransactionState _value,
      $Res Function(_$_ErrorTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_ErrorTransactionState implements _ErrorTransactionState {
  const _$_ErrorTransactionState();

  @override
  String toString() {
    return 'TransactionState.error()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_ErrorTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return error();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return error?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (error != null) {
      return error();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return error(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return error?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (error != null) {
      return error(this);
    }
    return orElse();
  }
}

abstract class _ErrorTransactionState implements TransactionState {
  const factory _ErrorTransactionState() = _$_ErrorTransactionState;
}

/// @nodoc
abstract class _$$_SuccessTransactionStateCopyWith<$Res> {
  factory _$$_SuccessTransactionStateCopyWith(_$_SuccessTransactionState value,
          $Res Function(_$_SuccessTransactionState) then) =
      __$$_SuccessTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_SuccessTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_SuccessTransactionState>
    implements _$$_SuccessTransactionStateCopyWith<$Res> {
  __$$_SuccessTransactionStateCopyWithImpl(_$_SuccessTransactionState _value,
      $Res Function(_$_SuccessTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_SuccessTransactionState implements _SuccessTransactionState {
  const _$_SuccessTransactionState();

  @override
  String toString() {
    return 'TransactionState.success()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SuccessTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return success();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return success?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (success != null) {
      return success();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return success(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return success?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (success != null) {
      return success(this);
    }
    return orElse();
  }
}

abstract class _SuccessTransactionState implements TransactionState {
  const factory _SuccessTransactionState() = _$_SuccessTransactionState;
}

/// @nodoc
abstract class _$$_AssetCreatedStateCopyWith<$Res> {
  factory _$$_AssetCreatedStateCopyWith(_$_AssetCreatedState value,
          $Res Function(_$_AssetCreatedState) then) =
      __$$_AssetCreatedStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AssetCreatedStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_AssetCreatedState>
    implements _$$_AssetCreatedStateCopyWith<$Res> {
  __$$_AssetCreatedStateCopyWithImpl(
      _$_AssetCreatedState _value, $Res Function(_$_AssetCreatedState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AssetCreatedState implements _AssetCreatedState {
  const _$_AssetCreatedState();

  @override
  String toString() {
    return 'TransactionState.assetCreated()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_AssetCreatedState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return assetCreated();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return assetCreated?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetCreated != null) {
      return assetCreated();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return assetCreated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return assetCreated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetCreated != null) {
      return assetCreated(this);
    }
    return orElse();
  }
}

abstract class _AssetCreatedState implements TransactionState {
  const factory _AssetCreatedState() = _$_AssetCreatedState;
}

/// @nodoc
abstract class _$$_CoinWithdrawnTransactionStateCopyWith<$Res> {
  factory _$$_CoinWithdrawnTransactionStateCopyWith(
          _$_CoinWithdrawnTransactionState value,
          $Res Function(_$_CoinWithdrawnTransactionState) then) =
      __$$_CoinWithdrawnTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_CoinWithdrawnTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_CoinWithdrawnTransactionState>
    implements _$$_CoinWithdrawnTransactionStateCopyWith<$Res> {
  __$$_CoinWithdrawnTransactionStateCopyWithImpl(
      _$_CoinWithdrawnTransactionState _value,
      $Res Function(_$_CoinWithdrawnTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_CoinWithdrawnTransactionState
    implements _CoinWithdrawnTransactionState {
  const _$_CoinWithdrawnTransactionState();

  @override
  String toString() {
    return 'TransactionState.assetWithdrawn()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_CoinWithdrawnTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return assetWithdrawn();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return assetWithdrawn?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetWithdrawn != null) {
      return assetWithdrawn();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return assetWithdrawn(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return assetWithdrawn?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetWithdrawn != null) {
      return assetWithdrawn(this);
    }
    return orElse();
  }
}

abstract class _CoinWithdrawnTransactionState implements TransactionState {
  const factory _CoinWithdrawnTransactionState() =
      _$_CoinWithdrawnTransactionState;
}

/// @nodoc
abstract class _$$_CoinDepositTransactionStateCopyWith<$Res> {
  factory _$$_CoinDepositTransactionStateCopyWith(
          _$_CoinDepositTransactionState value,
          $Res Function(_$_CoinDepositTransactionState) then) =
      __$$_CoinDepositTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_CoinDepositTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_CoinDepositTransactionState>
    implements _$$_CoinDepositTransactionStateCopyWith<$Res> {
  __$$_CoinDepositTransactionStateCopyWithImpl(
      _$_CoinDepositTransactionState _value,
      $Res Function(_$_CoinDepositTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_CoinDepositTransactionState implements _CoinDepositTransactionState {
  const _$_CoinDepositTransactionState();

  @override
  String toString() {
    return 'TransactionState.assetDeposit()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_CoinDepositTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return assetDeposit();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return assetDeposit?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetDeposit != null) {
      return assetDeposit();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return assetDeposit(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return assetDeposit?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetDeposit != null) {
      return assetDeposit(this);
    }
    return orElse();
  }
}

abstract class _CoinDepositTransactionState implements TransactionState {
  const factory _CoinDepositTransactionState() = _$_CoinDepositTransactionState;
}

/// @nodoc
abstract class _$$_AssetPutOnSaleTransactionStateCopyWith<$Res> {
  factory _$$_AssetPutOnSaleTransactionStateCopyWith(
          _$_AssetPutOnSaleTransactionState value,
          $Res Function(_$_AssetPutOnSaleTransactionState) then) =
      __$$_AssetPutOnSaleTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AssetPutOnSaleTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_AssetPutOnSaleTransactionState>
    implements _$$_AssetPutOnSaleTransactionStateCopyWith<$Res> {
  __$$_AssetPutOnSaleTransactionStateCopyWithImpl(
      _$_AssetPutOnSaleTransactionState _value,
      $Res Function(_$_AssetPutOnSaleTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AssetPutOnSaleTransactionState
    implements _AssetPutOnSaleTransactionState {
  const _$_AssetPutOnSaleTransactionState();

  @override
  String toString() {
    return 'TransactionState.assetPutOnSale()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AssetPutOnSaleTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return assetPutOnSale();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return assetPutOnSale?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetPutOnSale != null) {
      return assetPutOnSale();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return assetPutOnSale(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return assetPutOnSale?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetPutOnSale != null) {
      return assetPutOnSale(this);
    }
    return orElse();
  }
}

abstract class _AssetPutOnSaleTransactionState implements TransactionState {
  const factory _AssetPutOnSaleTransactionState() =
      _$_AssetPutOnSaleTransactionState;
}

/// @nodoc
abstract class _$$_AssetUpdatedTransactionStateCopyWith<$Res> {
  factory _$$_AssetUpdatedTransactionStateCopyWith(
          _$_AssetUpdatedTransactionState value,
          $Res Function(_$_AssetUpdatedTransactionState) then) =
      __$$_AssetUpdatedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AssetUpdatedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_AssetUpdatedTransactionState>
    implements _$$_AssetUpdatedTransactionStateCopyWith<$Res> {
  __$$_AssetUpdatedTransactionStateCopyWithImpl(
      _$_AssetUpdatedTransactionState _value,
      $Res Function(_$_AssetUpdatedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AssetUpdatedTransactionState implements _AssetUpdatedTransactionState {
  const _$_AssetUpdatedTransactionState();

  @override
  String toString() {
    return 'TransactionState.assetUpdated()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AssetUpdatedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return assetUpdated();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return assetUpdated?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetUpdated != null) {
      return assetUpdated();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return assetUpdated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return assetUpdated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetUpdated != null) {
      return assetUpdated(this);
    }
    return orElse();
  }
}

abstract class _AssetUpdatedTransactionState implements TransactionState {
  const factory _AssetUpdatedTransactionState() =
      _$_AssetUpdatedTransactionState;
}

/// @nodoc
abstract class _$$_AssetDeletedTransactionStateCopyWith<$Res> {
  factory _$$_AssetDeletedTransactionStateCopyWith(
          _$_AssetDeletedTransactionState value,
          $Res Function(_$_AssetDeletedTransactionState) then) =
      __$$_AssetDeletedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AssetDeletedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_AssetDeletedTransactionState>
    implements _$$_AssetDeletedTransactionStateCopyWith<$Res> {
  __$$_AssetDeletedTransactionStateCopyWithImpl(
      _$_AssetDeletedTransactionState _value,
      $Res Function(_$_AssetDeletedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AssetDeletedTransactionState implements _AssetDeletedTransactionState {
  const _$_AssetDeletedTransactionState();

  @override
  String toString() {
    return 'TransactionState.assetDeleted()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AssetDeletedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return assetDeleted();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return assetDeleted?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetDeleted != null) {
      return assetDeleted();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return assetDeleted(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return assetDeleted?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (assetDeleted != null) {
      return assetDeleted(this);
    }
    return orElse();
  }
}

abstract class _AssetDeletedTransactionState implements TransactionState {
  const factory _AssetDeletedTransactionState() =
      _$_AssetDeletedTransactionState;
}

/// @nodoc
abstract class _$$_AuctionScheduledTransactionStateCopyWith<$Res> {
  factory _$$_AuctionScheduledTransactionStateCopyWith(
          _$_AuctionScheduledTransactionState value,
          $Res Function(_$_AuctionScheduledTransactionState) then) =
      __$$_AuctionScheduledTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AuctionScheduledTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_AuctionScheduledTransactionState>
    implements _$$_AuctionScheduledTransactionStateCopyWith<$Res> {
  __$$_AuctionScheduledTransactionStateCopyWithImpl(
      _$_AuctionScheduledTransactionState _value,
      $Res Function(_$_AuctionScheduledTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AuctionScheduledTransactionState
    implements _AuctionScheduledTransactionState {
  const _$_AuctionScheduledTransactionState();

  @override
  String toString() {
    return 'TransactionState.auctionScheduled()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AuctionScheduledTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return auctionScheduled();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return auctionScheduled?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (auctionScheduled != null) {
      return auctionScheduled();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return auctionScheduled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return auctionScheduled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (auctionScheduled != null) {
      return auctionScheduled(this);
    }
    return orElse();
  }
}

abstract class _AuctionScheduledTransactionState implements TransactionState {
  const factory _AuctionScheduledTransactionState() =
      _$_AuctionScheduledTransactionState;
}

/// @nodoc
abstract class _$$_AuctionStartedTransactionStateCopyWith<$Res> {
  factory _$$_AuctionStartedTransactionStateCopyWith(
          _$_AuctionStartedTransactionState value,
          $Res Function(_$_AuctionStartedTransactionState) then) =
      __$$_AuctionStartedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AuctionStartedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_AuctionStartedTransactionState>
    implements _$$_AuctionStartedTransactionStateCopyWith<$Res> {
  __$$_AuctionStartedTransactionStateCopyWithImpl(
      _$_AuctionStartedTransactionState _value,
      $Res Function(_$_AuctionStartedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AuctionStartedTransactionState
    implements _AuctionStartedTransactionState {
  const _$_AuctionStartedTransactionState();

  @override
  String toString() {
    return 'TransactionState.auctionStarted()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AuctionStartedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return auctionStarted();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return auctionStarted?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (auctionStarted != null) {
      return auctionStarted();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return auctionStarted(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return auctionStarted?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (auctionStarted != null) {
      return auctionStarted(this);
    }
    return orElse();
  }
}

abstract class _AuctionStartedTransactionState implements TransactionState {
  const factory _AuctionStartedTransactionState() =
      _$_AuctionStartedTransactionState;
}

/// @nodoc
abstract class _$$_AuctionEndedTransactionStateCopyWith<$Res> {
  factory _$$_AuctionEndedTransactionStateCopyWith(
          _$_AuctionEndedTransactionState value,
          $Res Function(_$_AuctionEndedTransactionState) then) =
      __$$_AuctionEndedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AuctionEndedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_AuctionEndedTransactionState>
    implements _$$_AuctionEndedTransactionStateCopyWith<$Res> {
  __$$_AuctionEndedTransactionStateCopyWithImpl(
      _$_AuctionEndedTransactionState _value,
      $Res Function(_$_AuctionEndedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AuctionEndedTransactionState implements _AuctionEndedTransactionState {
  const _$_AuctionEndedTransactionState();

  @override
  String toString() {
    return 'TransactionState.auctionEnded()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AuctionEndedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return auctionEnded();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return auctionEnded?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (auctionEnded != null) {
      return auctionEnded();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return auctionEnded(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return auctionEnded?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (auctionEnded != null) {
      return auctionEnded(this);
    }
    return orElse();
  }
}

abstract class _AuctionEndedTransactionState implements TransactionState {
  const factory _AuctionEndedTransactionState() =
      _$_AuctionEndedTransactionState;
}

/// @nodoc
abstract class _$$_AuctionCanceledTransactionStateCopyWith<$Res> {
  factory _$$_AuctionCanceledTransactionStateCopyWith(
          _$_AuctionCanceledTransactionState value,
          $Res Function(_$_AuctionCanceledTransactionState) then) =
      __$$_AuctionCanceledTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_AuctionCanceledTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_AuctionCanceledTransactionState>
    implements _$$_AuctionCanceledTransactionStateCopyWith<$Res> {
  __$$_AuctionCanceledTransactionStateCopyWithImpl(
      _$_AuctionCanceledTransactionState _value,
      $Res Function(_$_AuctionCanceledTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_AuctionCanceledTransactionState
    implements _AuctionCanceledTransactionState {
  const _$_AuctionCanceledTransactionState();

  @override
  String toString() {
    return 'TransactionState.auctionCanceled()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AuctionCanceledTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return auctionCanceled();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return auctionCanceled?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (auctionCanceled != null) {
      return auctionCanceled();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return auctionCanceled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return auctionCanceled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (auctionCanceled != null) {
      return auctionCanceled(this);
    }
    return orElse();
  }
}

abstract class _AuctionCanceledTransactionState implements TransactionState {
  const factory _AuctionCanceledTransactionState() =
      _$_AuctionCanceledTransactionState;
}

/// @nodoc
abstract class _$$_BidPlacedTransactionStateCopyWith<$Res> {
  factory _$$_BidPlacedTransactionStateCopyWith(
          _$_BidPlacedTransactionState value,
          $Res Function(_$_BidPlacedTransactionState) then) =
      __$$_BidPlacedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_BidPlacedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_BidPlacedTransactionState>
    implements _$$_BidPlacedTransactionStateCopyWith<$Res> {
  __$$_BidPlacedTransactionStateCopyWithImpl(
      _$_BidPlacedTransactionState _value,
      $Res Function(_$_BidPlacedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_BidPlacedTransactionState implements _BidPlacedTransactionState {
  const _$_BidPlacedTransactionState();

  @override
  String toString() {
    return 'TransactionState.bidPlaced()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_BidPlacedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return bidPlaced();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return bidPlaced?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (bidPlaced != null) {
      return bidPlaced();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return bidPlaced(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return bidPlaced?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (bidPlaced != null) {
      return bidPlaced(this);
    }
    return orElse();
  }
}

abstract class _BidPlacedTransactionState implements TransactionState {
  const factory _BidPlacedTransactionState() = _$_BidPlacedTransactionState;
}

/// @nodoc
abstract class _$$_BidAcceptedTransactionStateCopyWith<$Res> {
  factory _$$_BidAcceptedTransactionStateCopyWith(
          _$_BidAcceptedTransactionState value,
          $Res Function(_$_BidAcceptedTransactionState) then) =
      __$$_BidAcceptedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_BidAcceptedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_BidAcceptedTransactionState>
    implements _$$_BidAcceptedTransactionStateCopyWith<$Res> {
  __$$_BidAcceptedTransactionStateCopyWithImpl(
      _$_BidAcceptedTransactionState _value,
      $Res Function(_$_BidAcceptedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_BidAcceptedTransactionState implements _BidAcceptedTransactionState {
  const _$_BidAcceptedTransactionState();

  @override
  String toString() {
    return 'TransactionState.bidAccepted()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_BidAcceptedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return bidAccepted();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return bidAccepted?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (bidAccepted != null) {
      return bidAccepted();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return bidAccepted(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return bidAccepted?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (bidAccepted != null) {
      return bidAccepted(this);
    }
    return orElse();
  }
}

abstract class _BidAcceptedTransactionState implements TransactionState {
  const factory _BidAcceptedTransactionState() = _$_BidAcceptedTransactionState;
}

/// @nodoc
abstract class _$$_OfferWithdrawnTransactionStateCopyWith<$Res> {
  factory _$$_OfferWithdrawnTransactionStateCopyWith(
          _$_OfferWithdrawnTransactionState value,
          $Res Function(_$_OfferWithdrawnTransactionState) then) =
      __$$_OfferWithdrawnTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OfferWithdrawnTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_OfferWithdrawnTransactionState>
    implements _$$_OfferWithdrawnTransactionStateCopyWith<$Res> {
  __$$_OfferWithdrawnTransactionStateCopyWithImpl(
      _$_OfferWithdrawnTransactionState _value,
      $Res Function(_$_OfferWithdrawnTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OfferWithdrawnTransactionState
    implements _OfferWithdrawnTransactionState {
  const _$_OfferWithdrawnTransactionState();

  @override
  String toString() {
    return 'TransactionState.offerWithdrawn()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OfferWithdrawnTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return offerWithdrawn();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return offerWithdrawn?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (offerWithdrawn != null) {
      return offerWithdrawn();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return offerWithdrawn(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return offerWithdrawn?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (offerWithdrawn != null) {
      return offerWithdrawn(this);
    }
    return orElse();
  }
}

abstract class _OfferWithdrawnTransactionState implements TransactionState {
  const factory _OfferWithdrawnTransactionState() =
      _$_OfferWithdrawnTransactionState;
}

/// @nodoc
abstract class _$$_OfferMdeTransactionStateCopyWith<$Res> {
  factory _$$_OfferMdeTransactionStateCopyWith(
          _$_OfferMdeTransactionState value,
          $Res Function(_$_OfferMdeTransactionState) then) =
      __$$_OfferMdeTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OfferMdeTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_OfferMdeTransactionState>
    implements _$$_OfferMdeTransactionStateCopyWith<$Res> {
  __$$_OfferMdeTransactionStateCopyWithImpl(_$_OfferMdeTransactionState _value,
      $Res Function(_$_OfferMdeTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OfferMdeTransactionState implements _OfferMdeTransactionState {
  const _$_OfferMdeTransactionState();

  @override
  String toString() {
    return 'TransactionState.offerMade()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OfferMdeTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return offerMade();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return offerMade?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (offerMade != null) {
      return offerMade();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return offerMade(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return offerMade?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (offerMade != null) {
      return offerMade(this);
    }
    return orElse();
  }
}

abstract class _OfferMdeTransactionState implements TransactionState {
  const factory _OfferMdeTransactionState() = _$_OfferMdeTransactionState;
}

/// @nodoc
abstract class _$$_OfferAcceptedTransactionStateCopyWith<$Res> {
  factory _$$_OfferAcceptedTransactionStateCopyWith(
          _$_OfferAcceptedTransactionState value,
          $Res Function(_$_OfferAcceptedTransactionState) then) =
      __$$_OfferAcceptedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OfferAcceptedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_OfferAcceptedTransactionState>
    implements _$$_OfferAcceptedTransactionStateCopyWith<$Res> {
  __$$_OfferAcceptedTransactionStateCopyWithImpl(
      _$_OfferAcceptedTransactionState _value,
      $Res Function(_$_OfferAcceptedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OfferAcceptedTransactionState
    implements _OfferAcceptedTransactionState {
  const _$_OfferAcceptedTransactionState();

  @override
  String toString() {
    return 'TransactionState.offerAccepted()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OfferAcceptedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return offerAccepted();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return offerAccepted?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (offerAccepted != null) {
      return offerAccepted();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return offerAccepted(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return offerAccepted?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (offerAccepted != null) {
      return offerAccepted(this);
    }
    return orElse();
  }
}

abstract class _OfferAcceptedTransactionState implements TransactionState {
  const factory _OfferAcceptedTransactionState() =
      _$_OfferAcceptedTransactionState;
}

/// @nodoc
abstract class _$$_OrderCreatedTransactionStateCopyWith<$Res> {
  factory _$$_OrderCreatedTransactionStateCopyWith(
          _$_OrderCreatedTransactionState value,
          $Res Function(_$_OrderCreatedTransactionState) then) =
      __$$_OrderCreatedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OrderCreatedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_OrderCreatedTransactionState>
    implements _$$_OrderCreatedTransactionStateCopyWith<$Res> {
  __$$_OrderCreatedTransactionStateCopyWithImpl(
      _$_OrderCreatedTransactionState _value,
      $Res Function(_$_OrderCreatedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OrderCreatedTransactionState implements _OrderCreatedTransactionState {
  const _$_OrderCreatedTransactionState();

  @override
  String toString() {
    return 'TransactionState.orderCreated()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OrderCreatedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return orderCreated();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return orderCreated?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderCreated != null) {
      return orderCreated();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return orderCreated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return orderCreated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderCreated != null) {
      return orderCreated(this);
    }
    return orElse();
  }
}

abstract class _OrderCreatedTransactionState implements TransactionState {
  const factory _OrderCreatedTransactionState() =
      _$_OrderCreatedTransactionState;
}

/// @nodoc
abstract class _$$_OrderUpdatedTransactionStateCopyWith<$Res> {
  factory _$$_OrderUpdatedTransactionStateCopyWith(
          _$_OrderUpdatedTransactionState value,
          $Res Function(_$_OrderUpdatedTransactionState) then) =
      __$$_OrderUpdatedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OrderUpdatedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_OrderUpdatedTransactionState>
    implements _$$_OrderUpdatedTransactionStateCopyWith<$Res> {
  __$$_OrderUpdatedTransactionStateCopyWithImpl(
      _$_OrderUpdatedTransactionState _value,
      $Res Function(_$_OrderUpdatedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OrderUpdatedTransactionState implements _OrderUpdatedTransactionState {
  const _$_OrderUpdatedTransactionState();

  @override
  String toString() {
    return 'TransactionState.orderUpdated()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OrderUpdatedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return orderUpdated();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return orderUpdated?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderUpdated != null) {
      return orderUpdated();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return orderUpdated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return orderUpdated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderUpdated != null) {
      return orderUpdated(this);
    }
    return orElse();
  }
}

abstract class _OrderUpdatedTransactionState implements TransactionState {
  const factory _OrderUpdatedTransactionState() =
      _$_OrderUpdatedTransactionState;
}

/// @nodoc
abstract class _$$_OrderDeletedTransactionStateCopyWith<$Res> {
  factory _$$_OrderDeletedTransactionStateCopyWith(
          _$_OrderDeletedTransactionState value,
          $Res Function(_$_OrderDeletedTransactionState) then) =
      __$$_OrderDeletedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OrderDeletedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_OrderDeletedTransactionState>
    implements _$$_OrderDeletedTransactionStateCopyWith<$Res> {
  __$$_OrderDeletedTransactionStateCopyWithImpl(
      _$_OrderDeletedTransactionState _value,
      $Res Function(_$_OrderDeletedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OrderDeletedTransactionState implements _OrderDeletedTransactionState {
  const _$_OrderDeletedTransactionState();

  @override
  String toString() {
    return 'TransactionState.orderDeleted()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OrderDeletedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return orderDeleted();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return orderDeleted?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderDeleted != null) {
      return orderDeleted();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return orderDeleted(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return orderDeleted?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderDeleted != null) {
      return orderDeleted(this);
    }
    return orElse();
  }
}

abstract class _OrderDeletedTransactionState implements TransactionState {
  const factory _OrderDeletedTransactionState() =
      _$_OrderDeletedTransactionState;
}

/// @nodoc
abstract class _$$_OrderFilledTransactionStateCopyWith<$Res> {
  factory _$$_OrderFilledTransactionStateCopyWith(
          _$_OrderFilledTransactionState value,
          $Res Function(_$_OrderFilledTransactionState) then) =
      __$$_OrderFilledTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OrderFilledTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_OrderFilledTransactionState>
    implements _$$_OrderFilledTransactionStateCopyWith<$Res> {
  __$$_OrderFilledTransactionStateCopyWithImpl(
      _$_OrderFilledTransactionState _value,
      $Res Function(_$_OrderFilledTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OrderFilledTransactionState implements _OrderFilledTransactionState {
  const _$_OrderFilledTransactionState();

  @override
  String toString() {
    return 'TransactionState.orderFilled()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OrderFilledTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return orderFilled();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return orderFilled?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderFilled != null) {
      return orderFilled();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return orderFilled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return orderFilled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderFilled != null) {
      return orderFilled(this);
    }
    return orElse();
  }
}

abstract class _OrderFilledTransactionState implements TransactionState {
  const factory _OrderFilledTransactionState() = _$_OrderFilledTransactionState;
}

/// @nodoc
abstract class _$$_OrderCancelledTransactionStateCopyWith<$Res> {
  factory _$$_OrderCancelledTransactionStateCopyWith(
          _$_OrderCancelledTransactionState value,
          $Res Function(_$_OrderCancelledTransactionState) then) =
      __$$_OrderCancelledTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OrderCancelledTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_OrderCancelledTransactionState>
    implements _$$_OrderCancelledTransactionStateCopyWith<$Res> {
  __$$_OrderCancelledTransactionStateCopyWithImpl(
      _$_OrderCancelledTransactionState _value,
      $Res Function(_$_OrderCancelledTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OrderCancelledTransactionState
    implements _OrderCancelledTransactionState {
  const _$_OrderCancelledTransactionState();

  @override
  String toString() {
    return 'TransactionState.orderCanceled()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OrderCancelledTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return orderCanceled();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return orderCanceled?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderCanceled != null) {
      return orderCanceled();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return orderCanceled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return orderCanceled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderCanceled != null) {
      return orderCanceled(this);
    }
    return orElse();
  }
}

abstract class _OrderCancelledTransactionState implements TransactionState {
  const factory _OrderCancelledTransactionState() =
      _$_OrderCancelledTransactionState;
}

/// @nodoc
abstract class _$$_OrderConfirmedTransactionStateCopyWith<$Res> {
  factory _$$_OrderConfirmedTransactionStateCopyWith(
          _$_OrderConfirmedTransactionState value,
          $Res Function(_$_OrderConfirmedTransactionState) then) =
      __$$_OrderConfirmedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OrderConfirmedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_OrderConfirmedTransactionState>
    implements _$$_OrderConfirmedTransactionStateCopyWith<$Res> {
  __$$_OrderConfirmedTransactionStateCopyWithImpl(
      _$_OrderConfirmedTransactionState _value,
      $Res Function(_$_OrderConfirmedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OrderConfirmedTransactionState
    implements _OrderConfirmedTransactionState {
  const _$_OrderConfirmedTransactionState();

  @override
  String toString() {
    return 'TransactionState.orderconfirmed()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OrderConfirmedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return orderconfirmed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return orderconfirmed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderconfirmed != null) {
      return orderconfirmed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return orderconfirmed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return orderconfirmed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderconfirmed != null) {
      return orderconfirmed(this);
    }
    return orElse();
  }
}

abstract class _OrderConfirmedTransactionState implements TransactionState {
  const factory _OrderConfirmedTransactionState() =
      _$_OrderConfirmedTransactionState;
}

/// @nodoc
abstract class _$$_OrderFailedTransactionStateCopyWith<$Res> {
  factory _$$_OrderFailedTransactionStateCopyWith(
          _$_OrderFailedTransactionState value,
          $Res Function(_$_OrderFailedTransactionState) then) =
      __$$_OrderFailedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_OrderFailedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_OrderFailedTransactionState>
    implements _$$_OrderFailedTransactionStateCopyWith<$Res> {
  __$$_OrderFailedTransactionStateCopyWithImpl(
      _$_OrderFailedTransactionState _value,
      $Res Function(_$_OrderFailedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_OrderFailedTransactionState implements _OrderFailedTransactionState {
  const _$_OrderFailedTransactionState();

  @override
  String toString() {
    return 'TransactionState.orderfailed()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_OrderFailedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return orderfailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return orderfailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderfailed != null) {
      return orderfailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return orderfailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return orderfailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (orderfailed != null) {
      return orderfailed(this);
    }
    return orElse();
  }
}

abstract class _OrderFailedTransactionState implements TransactionState {
  const factory _OrderFailedTransactionState() = _$_OrderFailedTransactionState;
}

/// @nodoc
abstract class _$$_TransferCreatedTransactionStateCopyWith<$Res> {
  factory _$$_TransferCreatedTransactionStateCopyWith(
          _$_TransferCreatedTransactionState value,
          $Res Function(_$_TransferCreatedTransactionState) then) =
      __$$_TransferCreatedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_TransferCreatedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_TransferCreatedTransactionState>
    implements _$$_TransferCreatedTransactionStateCopyWith<$Res> {
  __$$_TransferCreatedTransactionStateCopyWithImpl(
      _$_TransferCreatedTransactionState _value,
      $Res Function(_$_TransferCreatedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_TransferCreatedTransactionState
    implements _TransferCreatedTransactionState {
  const _$_TransferCreatedTransactionState();

  @override
  String toString() {
    return 'TransactionState.transferCreated()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_TransferCreatedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return transferCreated();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return transferCreated?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (transferCreated != null) {
      return transferCreated();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return transferCreated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return transferCreated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (transferCreated != null) {
      return transferCreated(this);
    }
    return orElse();
  }
}

abstract class _TransferCreatedTransactionState implements TransactionState {
  const factory _TransferCreatedTransactionState() =
      _$_TransferCreatedTransactionState;
}

/// @nodoc
abstract class _$$_TransferUpdatedTransactionStateCopyWith<$Res> {
  factory _$$_TransferUpdatedTransactionStateCopyWith(
          _$_TransferUpdatedTransactionState value,
          $Res Function(_$_TransferUpdatedTransactionState) then) =
      __$$_TransferUpdatedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_TransferUpdatedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_TransferUpdatedTransactionState>
    implements _$$_TransferUpdatedTransactionStateCopyWith<$Res> {
  __$$_TransferUpdatedTransactionStateCopyWithImpl(
      _$_TransferUpdatedTransactionState _value,
      $Res Function(_$_TransferUpdatedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_TransferUpdatedTransactionState
    implements _TransferUpdatedTransactionState {
  const _$_TransferUpdatedTransactionState();

  @override
  String toString() {
    return 'TransactionState.transferUpdated()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_TransferUpdatedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return transferUpdated();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return transferUpdated?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (transferUpdated != null) {
      return transferUpdated();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return transferUpdated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return transferUpdated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (transferUpdated != null) {
      return transferUpdated(this);
    }
    return orElse();
  }
}

abstract class _TransferUpdatedTransactionState implements TransactionState {
  const factory _TransferUpdatedTransactionState() =
      _$_TransferUpdatedTransactionState;
}

/// @nodoc
abstract class _$$_TransferDeletedTransactionStateCopyWith<$Res> {
  factory _$$_TransferDeletedTransactionStateCopyWith(
          _$_TransferDeletedTransactionState value,
          $Res Function(_$_TransferDeletedTransactionState) then) =
      __$$_TransferDeletedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_TransferDeletedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_TransferDeletedTransactionState>
    implements _$$_TransferDeletedTransactionStateCopyWith<$Res> {
  __$$_TransferDeletedTransactionStateCopyWithImpl(
      _$_TransferDeletedTransactionState _value,
      $Res Function(_$_TransferDeletedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_TransferDeletedTransactionState
    implements _TransferDeletedTransactionState {
  const _$_TransferDeletedTransactionState();

  @override
  String toString() {
    return 'TransactionState.transferDeleted()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_TransferDeletedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return transferDeleted();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return transferDeleted?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (transferDeleted != null) {
      return transferDeleted();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return transferDeleted(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return transferDeleted?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (transferDeleted != null) {
      return transferDeleted(this);
    }
    return orElse();
  }
}

abstract class _TransferDeletedTransactionState implements TransactionState {
  const factory _TransferDeletedTransactionState() =
      _$_TransferDeletedTransactionState;
}

/// @nodoc
abstract class _$$_TransferCanceledTransactionStateCopyWith<$Res> {
  factory _$$_TransferCanceledTransactionStateCopyWith(
          _$_TransferCanceledTransactionState value,
          $Res Function(_$_TransferCanceledTransactionState) then) =
      __$$_TransferCanceledTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_TransferCanceledTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_TransferCanceledTransactionState>
    implements _$$_TransferCanceledTransactionStateCopyWith<$Res> {
  __$$_TransferCanceledTransactionStateCopyWithImpl(
      _$_TransferCanceledTransactionState _value,
      $Res Function(_$_TransferCanceledTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_TransferCanceledTransactionState
    implements _TransferCanceledTransactionState {
  const _$_TransferCanceledTransactionState();

  @override
  String toString() {
    return 'TransactionState.transferCanceled()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_TransferCanceledTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return transferCanceled();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return transferCanceled?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (transferCanceled != null) {
      return transferCanceled();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return transferCanceled(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return transferCanceled?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (transferCanceled != null) {
      return transferCanceled(this);
    }
    return orElse();
  }
}

abstract class _TransferCanceledTransactionState implements TransactionState {
  const factory _TransferCanceledTransactionState() =
      _$_TransferCanceledTransactionState;
}

/// @nodoc
abstract class _$$_LoadingP2PCreatedTransactionStateCopyWith<$Res> {
  factory _$$_LoadingP2PCreatedTransactionStateCopyWith(
          _$_LoadingP2PCreatedTransactionState value,
          $Res Function(_$_LoadingP2PCreatedTransactionState) then) =
      __$$_LoadingP2PCreatedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_LoadingP2PCreatedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_LoadingP2PCreatedTransactionState>
    implements _$$_LoadingP2PCreatedTransactionStateCopyWith<$Res> {
  __$$_LoadingP2PCreatedTransactionStateCopyWithImpl(
      _$_LoadingP2PCreatedTransactionState _value,
      $Res Function(_$_LoadingP2PCreatedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_LoadingP2PCreatedTransactionState
    implements _LoadingP2PCreatedTransactionState {
  const _$_LoadingP2PCreatedTransactionState();

  @override
  String toString() {
    return 'TransactionState.p2pCreated()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_LoadingP2PCreatedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return p2pCreated();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return p2pCreated?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (p2pCreated != null) {
      return p2pCreated();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return p2pCreated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return p2pCreated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (p2pCreated != null) {
      return p2pCreated(this);
    }
    return orElse();
  }
}

abstract class _LoadingP2PCreatedTransactionState implements TransactionState {
  const factory _LoadingP2PCreatedTransactionState() =
      _$_LoadingP2PCreatedTransactionState;
}

/// @nodoc
abstract class _$$_ErrorP2PAppealedTransactionStateCopyWith<$Res> {
  factory _$$_ErrorP2PAppealedTransactionStateCopyWith(
          _$_ErrorP2PAppealedTransactionState value,
          $Res Function(_$_ErrorP2PAppealedTransactionState) then) =
      __$$_ErrorP2PAppealedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_ErrorP2PAppealedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_ErrorP2PAppealedTransactionState>
    implements _$$_ErrorP2PAppealedTransactionStateCopyWith<$Res> {
  __$$_ErrorP2PAppealedTransactionStateCopyWithImpl(
      _$_ErrorP2PAppealedTransactionState _value,
      $Res Function(_$_ErrorP2PAppealedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_ErrorP2PAppealedTransactionState
    implements _ErrorP2PAppealedTransactionState {
  const _$_ErrorP2PAppealedTransactionState();

  @override
  String toString() {
    return 'TransactionState.p2pappealed()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_ErrorP2PAppealedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return p2pappealed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return p2pappealed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (p2pappealed != null) {
      return p2pappealed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return p2pappealed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return p2pappealed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (p2pappealed != null) {
      return p2pappealed(this);
    }
    return orElse();
  }
}

abstract class _ErrorP2PAppealedTransactionState implements TransactionState {
  const factory _ErrorP2PAppealedTransactionState() =
      _$_ErrorP2PAppealedTransactionState;
}

/// @nodoc
abstract class _$$_SuccessP2PUpdatedTransactionStateCopyWith<$Res> {
  factory _$$_SuccessP2PUpdatedTransactionStateCopyWith(
          _$_SuccessP2PUpdatedTransactionState value,
          $Res Function(_$_SuccessP2PUpdatedTransactionState) then) =
      __$$_SuccessP2PUpdatedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_SuccessP2PUpdatedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_SuccessP2PUpdatedTransactionState>
    implements _$$_SuccessP2PUpdatedTransactionStateCopyWith<$Res> {
  __$$_SuccessP2PUpdatedTransactionStateCopyWithImpl(
      _$_SuccessP2PUpdatedTransactionState _value,
      $Res Function(_$_SuccessP2PUpdatedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_SuccessP2PUpdatedTransactionState
    implements _SuccessP2PUpdatedTransactionState {
  const _$_SuccessP2PUpdatedTransactionState();

  @override
  String toString() {
    return 'TransactionState.p2pUpdated()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SuccessP2PUpdatedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return p2pUpdated();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return p2pUpdated?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (p2pUpdated != null) {
      return p2pUpdated();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return p2pUpdated(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return p2pUpdated?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (p2pUpdated != null) {
      return p2pUpdated(this);
    }
    return orElse();
  }
}

abstract class _SuccessP2PUpdatedTransactionState implements TransactionState {
  const factory _SuccessP2PUpdatedTransactionState() =
      _$_SuccessP2PUpdatedTransactionState;
}

/// @nodoc
abstract class _$$_LoadingP2PDeletedTransactionStateCopyWith<$Res> {
  factory _$$_LoadingP2PDeletedTransactionStateCopyWith(
          _$_LoadingP2PDeletedTransactionState value,
          $Res Function(_$_LoadingP2PDeletedTransactionState) then) =
      __$$_LoadingP2PDeletedTransactionStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_LoadingP2PDeletedTransactionStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res,
        _$_LoadingP2PDeletedTransactionState>
    implements _$$_LoadingP2PDeletedTransactionStateCopyWith<$Res> {
  __$$_LoadingP2PDeletedTransactionStateCopyWithImpl(
      _$_LoadingP2PDeletedTransactionState _value,
      $Res Function(_$_LoadingP2PDeletedTransactionState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_LoadingP2PDeletedTransactionState
    implements _LoadingP2PDeletedTransactionState {
  const _$_LoadingP2PDeletedTransactionState();

  @override
  String toString() {
    return 'TransactionState.p2pDeleted()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_LoadingP2PDeletedTransactionState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return p2pDeleted();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return p2pDeleted?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (p2pDeleted != null) {
      return p2pDeleted();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return p2pDeleted(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return p2pDeleted?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (p2pDeleted != null) {
      return p2pDeleted(this);
    }
    return orElse();
  }
}

abstract class _LoadingP2PDeletedTransactionState implements TransactionState {
  const factory _LoadingP2PDeletedTransactionState() =
      _$_LoadingP2PDeletedTransactionState;
}

/// @nodoc
abstract class _$$_InitialNftStateCopyWith<$Res> {
  factory _$$_InitialNftStateCopyWith(
          _$_InitialNftState value, $Res Function(_$_InitialNftState) then) =
      __$$_InitialNftStateCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_InitialNftStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_InitialNftState>
    implements _$$_InitialNftStateCopyWith<$Res> {
  __$$_InitialNftStateCopyWithImpl(
      _$_InitialNftState _value, $Res Function(_$_InitialNftState) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_InitialNftState implements _InitialNftState {
  const _$_InitialNftState();

  @override
  String toString() {
    return 'TransactionState.initialnft()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_InitialNftState);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return initialnft();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return initialnft?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (initialnft != null) {
      return initialnft();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return initialnft(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return initialnft?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (initialnft != null) {
      return initialnft(this);
    }
    return orElse();
  }
}

abstract class _InitialNftState implements TransactionState {
  const factory _InitialNftState() = _$_InitialNftState;
}

/// @nodoc
abstract class _$$_DisplayNftStateCopyWith<$Res> {
  factory _$$_DisplayNftStateCopyWith(
          _$_DisplayNftState value, $Res Function(_$_DisplayNftState) then) =
      __$$_DisplayNftStateCopyWithImpl<$Res>;
  @useResult
  $Res call({List<Transaction> nft});
}

/// @nodoc
class __$$_DisplayNftStateCopyWithImpl<$Res>
    extends _$TransactionStateCopyWithImpl<$Res, _$_DisplayNftState>
    implements _$$_DisplayNftStateCopyWith<$Res> {
  __$$_DisplayNftStateCopyWithImpl(
      _$_DisplayNftState _value, $Res Function(_$_DisplayNftState) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nft = null,
  }) {
    return _then(_$_DisplayNftState(
      null == nft
          ? _value._nft
          : nft // ignore: cast_nullable_to_non_nullable
              as List<Transaction>,
    ));
  }
}

/// @nodoc

class _$_DisplayNftState implements _DisplayNftState {
  const _$_DisplayNftState(final List<Transaction> nft) : _nft = nft;

  final List<Transaction> _nft;
  @override
  List<Transaction> get nft {
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_nft);
  }

  @override
  String toString() {
    return 'TransactionState.groupnftbyid(nft: $nft)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DisplayNftState &&
            const DeepCollectionEquality().equals(other._nft, _nft));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(_nft));

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DisplayNftStateCopyWith<_$_DisplayNftState> get copyWith =>
      __$$_DisplayNftStateCopyWithImpl<_$_DisplayNftState>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() initial,
    required TResult Function() loading,
    required TResult Function() error,
    required TResult Function() success,
    required TResult Function() assetCreated,
    required TResult Function() assetWithdrawn,
    required TResult Function() assetDeposit,
    required TResult Function() assetPutOnSale,
    required TResult Function() assetUpdated,
    required TResult Function() assetDeleted,
    required TResult Function() auctionScheduled,
    required TResult Function() auctionStarted,
    required TResult Function() auctionEnded,
    required TResult Function() auctionCanceled,
    required TResult Function() bidPlaced,
    required TResult Function() bidAccepted,
    required TResult Function() offerWithdrawn,
    required TResult Function() offerMade,
    required TResult Function() offerAccepted,
    required TResult Function() orderCreated,
    required TResult Function() orderUpdated,
    required TResult Function() orderDeleted,
    required TResult Function() orderFilled,
    required TResult Function() orderCanceled,
    required TResult Function() orderconfirmed,
    required TResult Function() orderfailed,
    required TResult Function() transferCreated,
    required TResult Function() transferUpdated,
    required TResult Function() transferDeleted,
    required TResult Function() transferCanceled,
    required TResult Function() p2pCreated,
    required TResult Function() p2pappealed,
    required TResult Function() p2pUpdated,
    required TResult Function() p2pDeleted,
    required TResult Function() initialnft,
    required TResult Function(List<Transaction> nft) groupnftbyid,
  }) {
    return groupnftbyid(nft);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? initial,
    TResult? Function()? loading,
    TResult? Function()? error,
    TResult? Function()? success,
    TResult? Function()? assetCreated,
    TResult? Function()? assetWithdrawn,
    TResult? Function()? assetDeposit,
    TResult? Function()? assetPutOnSale,
    TResult? Function()? assetUpdated,
    TResult? Function()? assetDeleted,
    TResult? Function()? auctionScheduled,
    TResult? Function()? auctionStarted,
    TResult? Function()? auctionEnded,
    TResult? Function()? auctionCanceled,
    TResult? Function()? bidPlaced,
    TResult? Function()? bidAccepted,
    TResult? Function()? offerWithdrawn,
    TResult? Function()? offerMade,
    TResult? Function()? offerAccepted,
    TResult? Function()? orderCreated,
    TResult? Function()? orderUpdated,
    TResult? Function()? orderDeleted,
    TResult? Function()? orderFilled,
    TResult? Function()? orderCanceled,
    TResult? Function()? orderconfirmed,
    TResult? Function()? orderfailed,
    TResult? Function()? transferCreated,
    TResult? Function()? transferUpdated,
    TResult? Function()? transferDeleted,
    TResult? Function()? transferCanceled,
    TResult? Function()? p2pCreated,
    TResult? Function()? p2pappealed,
    TResult? Function()? p2pUpdated,
    TResult? Function()? p2pDeleted,
    TResult? Function()? initialnft,
    TResult? Function(List<Transaction> nft)? groupnftbyid,
  }) {
    return groupnftbyid?.call(nft);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? initial,
    TResult Function()? loading,
    TResult Function()? error,
    TResult Function()? success,
    TResult Function()? assetCreated,
    TResult Function()? assetWithdrawn,
    TResult Function()? assetDeposit,
    TResult Function()? assetPutOnSale,
    TResult Function()? assetUpdated,
    TResult Function()? assetDeleted,
    TResult Function()? auctionScheduled,
    TResult Function()? auctionStarted,
    TResult Function()? auctionEnded,
    TResult Function()? auctionCanceled,
    TResult Function()? bidPlaced,
    TResult Function()? bidAccepted,
    TResult Function()? offerWithdrawn,
    TResult Function()? offerMade,
    TResult Function()? offerAccepted,
    TResult Function()? orderCreated,
    TResult Function()? orderUpdated,
    TResult Function()? orderDeleted,
    TResult Function()? orderFilled,
    TResult Function()? orderCanceled,
    TResult Function()? orderconfirmed,
    TResult Function()? orderfailed,
    TResult Function()? transferCreated,
    TResult Function()? transferUpdated,
    TResult Function()? transferDeleted,
    TResult Function()? transferCanceled,
    TResult Function()? p2pCreated,
    TResult Function()? p2pappealed,
    TResult Function()? p2pUpdated,
    TResult Function()? p2pDeleted,
    TResult Function()? initialnft,
    TResult Function(List<Transaction> nft)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (groupnftbyid != null) {
      return groupnftbyid(nft);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_InitialState value) initial,
    required TResult Function(_LoadingTransactionState value) loading,
    required TResult Function(_ErrorTransactionState value) error,
    required TResult Function(_SuccessTransactionState value) success,
    required TResult Function(_AssetCreatedState value) assetCreated,
    required TResult Function(_CoinWithdrawnTransactionState value)
        assetWithdrawn,
    required TResult Function(_CoinDepositTransactionState value) assetDeposit,
    required TResult Function(_AssetPutOnSaleTransactionState value)
        assetPutOnSale,
    required TResult Function(_AssetUpdatedTransactionState value) assetUpdated,
    required TResult Function(_AssetDeletedTransactionState value) assetDeleted,
    required TResult Function(_AuctionScheduledTransactionState value)
        auctionScheduled,
    required TResult Function(_AuctionStartedTransactionState value)
        auctionStarted,
    required TResult Function(_AuctionEndedTransactionState value) auctionEnded,
    required TResult Function(_AuctionCanceledTransactionState value)
        auctionCanceled,
    required TResult Function(_BidPlacedTransactionState value) bidPlaced,
    required TResult Function(_BidAcceptedTransactionState value) bidAccepted,
    required TResult Function(_OfferWithdrawnTransactionState value)
        offerWithdrawn,
    required TResult Function(_OfferMdeTransactionState value) offerMade,
    required TResult Function(_OfferAcceptedTransactionState value)
        offerAccepted,
    required TResult Function(_OrderCreatedTransactionState value) orderCreated,
    required TResult Function(_OrderUpdatedTransactionState value) orderUpdated,
    required TResult Function(_OrderDeletedTransactionState value) orderDeleted,
    required TResult Function(_OrderFilledTransactionState value) orderFilled,
    required TResult Function(_OrderCancelledTransactionState value)
        orderCanceled,
    required TResult Function(_OrderConfirmedTransactionState value)
        orderconfirmed,
    required TResult Function(_OrderFailedTransactionState value) orderfailed,
    required TResult Function(_TransferCreatedTransactionState value)
        transferCreated,
    required TResult Function(_TransferUpdatedTransactionState value)
        transferUpdated,
    required TResult Function(_TransferDeletedTransactionState value)
        transferDeleted,
    required TResult Function(_TransferCanceledTransactionState value)
        transferCanceled,
    required TResult Function(_LoadingP2PCreatedTransactionState value)
        p2pCreated,
    required TResult Function(_ErrorP2PAppealedTransactionState value)
        p2pappealed,
    required TResult Function(_SuccessP2PUpdatedTransactionState value)
        p2pUpdated,
    required TResult Function(_LoadingP2PDeletedTransactionState value)
        p2pDeleted,
    required TResult Function(_InitialNftState value) initialnft,
    required TResult Function(_DisplayNftState value) groupnftbyid,
  }) {
    return groupnftbyid(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_InitialState value)? initial,
    TResult? Function(_LoadingTransactionState value)? loading,
    TResult? Function(_ErrorTransactionState value)? error,
    TResult? Function(_SuccessTransactionState value)? success,
    TResult? Function(_AssetCreatedState value)? assetCreated,
    TResult? Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult? Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult? Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult? Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult? Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult? Function(_AuctionScheduledTransactionState value)?
        auctionScheduled,
    TResult? Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult? Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult? Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult? Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult? Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult? Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult? Function(_OfferMdeTransactionState value)? offerMade,
    TResult? Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult? Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult? Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult? Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult? Function(_OrderFilledTransactionState value)? orderFilled,
    TResult? Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult? Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult? Function(_OrderFailedTransactionState value)? orderfailed,
    TResult? Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult? Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult? Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult? Function(_TransferCanceledTransactionState value)?
        transferCanceled,
    TResult? Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult? Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult? Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult? Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult? Function(_InitialNftState value)? initialnft,
    TResult? Function(_DisplayNftState value)? groupnftbyid,
  }) {
    return groupnftbyid?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_InitialState value)? initial,
    TResult Function(_LoadingTransactionState value)? loading,
    TResult Function(_ErrorTransactionState value)? error,
    TResult Function(_SuccessTransactionState value)? success,
    TResult Function(_AssetCreatedState value)? assetCreated,
    TResult Function(_CoinWithdrawnTransactionState value)? assetWithdrawn,
    TResult Function(_CoinDepositTransactionState value)? assetDeposit,
    TResult Function(_AssetPutOnSaleTransactionState value)? assetPutOnSale,
    TResult Function(_AssetUpdatedTransactionState value)? assetUpdated,
    TResult Function(_AssetDeletedTransactionState value)? assetDeleted,
    TResult Function(_AuctionScheduledTransactionState value)? auctionScheduled,
    TResult Function(_AuctionStartedTransactionState value)? auctionStarted,
    TResult Function(_AuctionEndedTransactionState value)? auctionEnded,
    TResult Function(_AuctionCanceledTransactionState value)? auctionCanceled,
    TResult Function(_BidPlacedTransactionState value)? bidPlaced,
    TResult Function(_BidAcceptedTransactionState value)? bidAccepted,
    TResult Function(_OfferWithdrawnTransactionState value)? offerWithdrawn,
    TResult Function(_OfferMdeTransactionState value)? offerMade,
    TResult Function(_OfferAcceptedTransactionState value)? offerAccepted,
    TResult Function(_OrderCreatedTransactionState value)? orderCreated,
    TResult Function(_OrderUpdatedTransactionState value)? orderUpdated,
    TResult Function(_OrderDeletedTransactionState value)? orderDeleted,
    TResult Function(_OrderFilledTransactionState value)? orderFilled,
    TResult Function(_OrderCancelledTransactionState value)? orderCanceled,
    TResult Function(_OrderConfirmedTransactionState value)? orderconfirmed,
    TResult Function(_OrderFailedTransactionState value)? orderfailed,
    TResult Function(_TransferCreatedTransactionState value)? transferCreated,
    TResult Function(_TransferUpdatedTransactionState value)? transferUpdated,
    TResult Function(_TransferDeletedTransactionState value)? transferDeleted,
    TResult Function(_TransferCanceledTransactionState value)? transferCanceled,
    TResult Function(_LoadingP2PCreatedTransactionState value)? p2pCreated,
    TResult Function(_ErrorP2PAppealedTransactionState value)? p2pappealed,
    TResult Function(_SuccessP2PUpdatedTransactionState value)? p2pUpdated,
    TResult Function(_LoadingP2PDeletedTransactionState value)? p2pDeleted,
    TResult Function(_InitialNftState value)? initialnft,
    TResult Function(_DisplayNftState value)? groupnftbyid,
    required TResult orElse(),
  }) {
    if (groupnftbyid != null) {
      return groupnftbyid(this);
    }
    return orElse();
  }
}

abstract class _DisplayNftState implements TransactionState {
  const factory _DisplayNftState(final List<Transaction> nft) =
      _$_DisplayNftState;

  List<Transaction> get nft;
  @JsonKey(ignore: true)
  _$$_DisplayNftStateCopyWith<_$_DisplayNftState> get copyWith =>
      throw _privateConstructorUsedError;
}
