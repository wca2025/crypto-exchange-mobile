// This file is "main.dart"
import '../../data/models/order.dart';
import '../../data/models/tier.dart';
import '../../data/models/transaction.dart';
import '../../presentation/pro/add_payment_method.dart';
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';

import '../enums/transactionstatus.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'p2p.freezed.dart';
// optional: Since our Order class is serializable, we must add this line.
// But if Order was not serializable, we could skip it.
part 'p2p.g.dart';

@freezed
class P2P with _$P2P {
  @JsonSerializable(explicitToJson: true)
  const factory P2P({
    required int id,

    // required  PaymentMethod paymentID,
    // required  Tier tierID,
    // required  Transaction transactionID,
    required int orderid,
    String? available,
    String? nickname,
    double? floating,
    double? fixedPrice,
    double? floatingPrice,
    double? amount,
    double? mintransactionquantity,
    double? maxtransactionquantity,
    double? notes,
    double? fixedprice,
    double? premium,
    double? unitprice,
    double? fiat,
    double? counterparty,
    double? quantity,
    String? typeoff,
    String? paymentwindow,
    String? reasonforappeal,
    String? description,
    String? phone,
    String? createdAt,
    double? updatedAt,
    // required TransactionStatus transactionStatusId
  }) = _P2P;

  factory P2P.fromJson(Map<String, Object?> json) => _$P2PFromJson(json);
}
